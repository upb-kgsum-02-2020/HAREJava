{"ast":null,"code":"/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: {\n      default: true\n    },\n    enableNegX: {\n      default: true\n    },\n    enablePosX: {\n      default: true\n    },\n    enableNegZ: {\n      default: true\n    },\n    enablePosZ: {\n      default: true\n    },\n    mode: {\n      default: 'touch',\n      oneOf: ['swipe', 'touch', 'press']\n    }\n  },\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel = 0;\n    this.xVel = 0;\n    this.bindMethods();\n  },\n  play: function () {\n    this.addEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n  remove: function () {\n    this.pause();\n  },\n  addEventListeners: function () {\n    const data = this.data;\n    const sceneEl = this.el.sceneEl;\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n\n    switch (data.mode) {\n      case 'swipe':\n      case 'touch':\n        sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n        sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n        break;\n\n      case 'press':\n        sceneEl.addEventListener('trackpaddown', this.onTouchStart);\n        sceneEl.addEventListener('trackpadup', this.onTouchEnd);\n        break;\n    }\n  },\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n    sceneEl.removeEventListener('trackpaddown', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadup', this.onTouchEnd);\n  },\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    this.dVelocity.x = this.isMoving ? this.xVel : 1;\n    return this.dVelocity.clone();\n  },\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n  onTouchStart: function (e) {\n    switch (this.data.mode) {\n      case 'swipe':\n        this.canRecordAxis = true;\n        this.startingAxisData = [];\n        break;\n\n      case 'touch':\n        this.isMoving = true;\n        break;\n\n      case 'press':\n        this.isMoving = true;\n        break;\n    }\n\n    e.preventDefault();\n  },\n  onTouchEnd: function (e) {\n    if (this.data.mode == 'swipe') {\n      this.startingAxisData = [];\n    }\n\n    this.isMoving = false;\n    e.preventDefault();\n  },\n  onAxisMove: function (e) {\n    switch (this.data.mode) {\n      case 'swipe':\n        return this.handleSwipeAxis(e);\n\n      case 'touch':\n      case 'press':\n        return this.handleTouchAxis(e);\n    }\n  },\n  handleSwipeAxis: function (e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    if (this.startingAxisData.length === 0 && this.canRecordAxis) {\n      this.canRecordAxis = false;\n      this.startingAxisData[0] = axisData[0];\n      this.startingAxisData[1] = axisData[1];\n    }\n\n    if (this.startingAxisData.length > 0) {\n      let velX = 0;\n      let velZ = 0;\n\n      if (data.enableNegX && axisData[0] < this.startingAxisData[0]) {\n        velX = -1;\n      }\n\n      if (data.enablePosX && axisData[0] > this.startingAxisData[0]) {\n        velX = 1;\n      }\n\n      if (data.enablePosZ && axisData[1] > this.startingAxisData[1]) {\n        velZ = -1;\n      }\n\n      if (data.enableNegZ && axisData[1] < this.startingAxisData[1]) {\n        velZ = 1;\n      }\n\n      const absChangeZ = Math.abs(this.startingAxisData[1] - axisData[1]);\n      const absChangeX = Math.abs(this.startingAxisData[0] - axisData[0]);\n\n      if (absChangeX > absChangeZ) {\n        this.zVel = 0;\n        this.xVel = velX;\n        this.isMoving = true;\n      } else {\n        this.xVel = 0;\n        this.zVel = velZ;\n        this.isMoving = true;\n      }\n    }\n  },\n  handleTouchAxis: function (e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n    let velX = 0;\n    let velZ = 0;\n\n    if (data.enableNegX && axisData[0] < 0) {\n      velX = -1;\n    }\n\n    if (data.enablePosX && axisData[0] > 0) {\n      velX = 1;\n    }\n\n    if (data.enablePosZ && axisData[1] > 0) {\n      velZ = -1;\n    }\n\n    if (data.enableNegZ && axisData[1] < 0) {\n      velZ = 1;\n    }\n\n    if (Math.abs(axisData[0]) > Math.abs(axisData[1])) {\n      this.zVel = 0;\n      this.xVel = velX;\n    } else {\n      this.xVel = 0;\n      this.zVel = velZ;\n    }\n  }\n});","map":{"version":3,"sources":["E:/Universitat Paderborn/NEW/kgsum/kgsum-visualization/node_modules/aframe-extras/src/controls/trackpad-controls.js"],"names":["module","exports","AFRAME","registerComponent","schema","enabled","default","enableNegX","enablePosX","enableNegZ","enablePosZ","mode","oneOf","init","dVelocity","THREE","Vector3","zVel","xVel","bindMethods","play","addEventListeners","pause","removeEventListeners","set","remove","data","sceneEl","el","addEventListener","onAxisMove","onTouchStart","onTouchEnd","removeEventListener","isVelocityActive","isMoving","getVelocityDelta","z","x","clone","bind","e","canRecordAxis","startingAxisData","preventDefault","handleSwipeAxis","handleTouchAxis","axisData","detail","axis","length","velX","velZ","absChangeZ","Math","abs","absChangeX"],"mappings":"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","sourcesContent":["/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: { default: true },\n    enableNegX: { default: true },\n    enablePosX: { default: true },\n    enableNegZ: { default: true },\n    enablePosZ: { default: true },\n    mode: { default: 'touch', oneOf: ['swipe', 'touch', 'press'] }\n\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel      = 0;\n    this.xVel      = 0;\n    this.bindMethods();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const data = this.data;\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n\n    switch (data.mode) {\n      case 'swipe':\n      case 'touch':\n        sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n        sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n        break;\n\n      case 'press':\n        sceneEl.addEventListener('trackpaddown', this.onTouchStart);\n        sceneEl.addEventListener('trackpadup', this.onTouchEnd);\n        break;\n    }\n\n  },\n\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n    sceneEl.removeEventListener('trackpaddown', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadup', this.onTouchEnd);\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    this.dVelocity.x = this.isMoving ? this.xVel : 1;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    switch(this.data.mode){\n      case 'swipe':\n        this.canRecordAxis = true;\n        this.startingAxisData = [];\n        break;\n      case 'touch':\n        this.isMoving = true;\n        break;\n      case 'press':\n        this.isMoving = true;\n        break;\n    }\n\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    if(this.data.mode == 'swipe') {\n        this.startingAxisData = [];\n    }\n\n    this.isMoving = false;\n    e.preventDefault();\n  },\n\n  onAxisMove: function(e){\n    switch (this.data.mode) {\n      case 'swipe':\n        return this.handleSwipeAxis(e);\n      case 'touch':\n      case 'press':\n        return this.handleTouchAxis(e);\n    }\n  },\n\n  handleSwipeAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    if(this.startingAxisData.length === 0 && this.canRecordAxis){\n      this.canRecordAxis = false;\n      this.startingAxisData[0] = axisData[0];\n      this.startingAxisData[1] = axisData[1];\n    }\n\n    if(this.startingAxisData.length > 0){\n      let velX = 0;\n      let velZ = 0;\n\n      if (data.enableNegX && axisData[0] < this.startingAxisData[0]) {\n        velX = -1;\n      }\n\n      if (data.enablePosX && axisData[0] > this.startingAxisData[0]) {\n        velX = 1;\n      }\n\n      if (data.enablePosZ && axisData[1] > this.startingAxisData[1]) {\n        velZ = -1;\n      }\n\n      if (data.enableNegZ && axisData[1] < this.startingAxisData[1]) {\n        velZ = 1;\n      }\n\n      const absChangeZ  = Math.abs(this.startingAxisData[1] - axisData[1]);\n      const absChangeX  = Math.abs(this.startingAxisData[0] - axisData[0]);\n\n      if (absChangeX > absChangeZ) {\n        this.zVel = 0;\n        this.xVel = velX;\n        this.isMoving = true;\n      } else {\n        this.xVel = 0;\n        this.zVel = velZ;\n        this.isMoving = true;\n      }\n\n    }\n  },\n\n  handleTouchAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    let velX = 0;\n    let velZ = 0;\n\n    if (data.enableNegX && axisData[0] < 0) {\n      velX = -1;\n    }\n\n    if (data.enablePosX && axisData[0] > 0) {\n      velX = 1;\n    }\n\n    if (data.enablePosZ && axisData[1] > 0) {\n      velZ = -1;\n    }\n\n    if (data.enableNegZ && axisData[1] < 0) {\n      velZ = 1;\n    }\n\n    if (Math.abs(axisData[0]) > Math.abs(axisData[1])) {\n      this.zVel = 0;\n      this.xVel = velX;\n    } else {\n      this.xVel = 0;\n      this.zVel = velZ;\n    }\n\n  }\n\n});\n\n"]},"metadata":{},"sourceType":"script"}