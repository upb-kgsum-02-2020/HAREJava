{"ast":null,"code":"THREE.ColladaLoader = require('../../lib/ColladaLoader');\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\n\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {\n    type: 'asset'\n  },\n  init: function () {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) {\n      return;\n    }\n\n    this.remove();\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {\n        format: 'collada',\n        model: self.model\n      });\n    });\n  },\n  remove: function () {\n    if (!this.model) {\n      return;\n    }\n\n    this.el.removeObject3D('mesh');\n  }\n});","map":{"version":3,"sources":["E:/Universitat Paderborn/NEW/src/node_modules/aframe-extras/src/loaders/collada-model-legacy.js"],"names":["THREE","ColladaLoader","require","module","exports","Component","AFRAME","registerComponent","schema","type","init","model","loader","update","self","el","src","data","rendererSystem","sceneEl","systems","renderer","remove","load","colladaModel","scene","traverse","object","isMesh","material","color","applyColorCorrection","map","emissive","emissiveMap","setObject3D","emit","format","removeObject3D"],"mappings":"AAAAA,KAAK,CAACC,aAAN,GAAsBC,OAAO,CAAC,yBAAD,CAA7B;AAEA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BC,MAAM,CAACC,iBAAP,CAAyB,sBAAzB,EAAiD;AAC1EC,EAAAA,MAAM,EAAE;AAACC,IAAAA,IAAI,EAAE;AAAP,GADkE;AAG1EC,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,MAAL,GAAc,IAAIZ,KAAK,CAACC,aAAV,EAAd;AACD,GANyE;AAQ1EY,EAAAA,MAAM,EAAE,YAAY;AAClB,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,EAAE,GAAG,KAAKA,EAAd;AACA,QAAIC,GAAG,GAAG,KAAKC,IAAf;AACA,QAAIC,cAAc,GAAG,KAAKH,EAAL,CAAQI,OAAR,CAAgBC,OAAhB,CAAwBC,QAA7C;;AAEA,QAAI,CAACL,GAAL,EAAU;AAAE;AAAS;;AAErB,SAAKM,MAAL;AAEA,SAAKV,MAAL,CAAYW,IAAZ,CAAiBP,GAAjB,EAAsB,UAAUQ,YAAV,EAAwB;AAC5CV,MAAAA,IAAI,CAACH,KAAL,GAAaa,YAAY,CAACC,KAA1B;AACAX,MAAAA,IAAI,CAACH,KAAL,CAAWe,QAAX,CAAoB,UAAUC,MAAV,EAAkB;AACpC,YAAIA,MAAM,CAACC,MAAX,EAAmB;AACjB,cAAIC,QAAQ,GAAGF,MAAM,CAACE,QAAtB;AACA,cAAIA,QAAQ,CAACC,KAAb,EAAoBZ,cAAc,CAACa,oBAAf,CAAoCF,QAAQ,CAACC,KAA7C;AACpB,cAAID,QAAQ,CAACG,GAAb,EAAkBd,cAAc,CAACa,oBAAf,CAAoCF,QAAQ,CAACG,GAA7C;AAClB,cAAIH,QAAQ,CAACI,QAAb,EAAuBf,cAAc,CAACa,oBAAf,CAAoCF,QAAQ,CAACI,QAA7C;AACvB,cAAIJ,QAAQ,CAACK,WAAb,EAA0BhB,cAAc,CAACa,oBAAf,CAAoCF,QAAQ,CAACK,WAA7C;AAC3B;AACF,OARD;AASAnB,MAAAA,EAAE,CAACoB,WAAH,CAAe,MAAf,EAAuBrB,IAAI,CAACH,KAA5B;AACAI,MAAAA,EAAE,CAACqB,IAAH,CAAQ,cAAR,EAAwB;AAACC,QAAAA,MAAM,EAAE,SAAT;AAAoB1B,QAAAA,KAAK,EAAEG,IAAI,CAACH;AAAhC,OAAxB;AACD,KAbD;AAcD,GAhCyE;AAkC1EW,EAAAA,MAAM,EAAE,YAAY;AAClB,QAAI,CAAC,KAAKX,KAAV,EAAiB;AAAE;AAAS;;AAC5B,SAAKI,EAAL,CAAQuB,cAAR,CAAuB,MAAvB;AACD;AArCyE,CAAjD,CAA3B","sourcesContent":["THREE.ColladaLoader = require('../../lib/ColladaLoader');\n\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {type: 'asset'},\n\n  init: function () {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {format: 'collada', model: self.model});\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n"]},"metadata":{},"sourceType":"script"}