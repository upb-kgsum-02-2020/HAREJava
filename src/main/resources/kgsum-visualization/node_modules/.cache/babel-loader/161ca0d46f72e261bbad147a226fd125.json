{"ast":null,"code":"/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: {\n      default: true\n    },\n    reverseEnabled: {\n      default: true\n    }\n  },\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n    this.direction = 0;\n  },\n  play: function () {\n    this.addEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n  remove: function () {\n    this.pause();\n  },\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n  },\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n\n    if (!canvasEl) {\n      return;\n    }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n  },\n  isVelocityActive: function () {\n    return this.data.enabled && !!this.direction;\n  },\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.direction;\n    return this.dVelocity.clone();\n  },\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  },\n  onTouchStart: function (e) {\n    this.direction = -1;\n\n    if (this.data.reverseEnabled && e.touches.length === 2) {\n      this.direction = 1;\n    }\n\n    e.preventDefault();\n  },\n  onTouchEnd: function (e) {\n    this.direction = 0;\n    e.preventDefault();\n  }\n});","map":{"version":3,"sources":["E:/Universitat Paderborn/NEW/kgsum/kgsum/kgsum/src/main/resources/kgsum-visualization/node_modules/aframe-extras/src/controls/touch-controls.js"],"names":["module","exports","AFRAME","registerComponent","schema","enabled","default","reverseEnabled","init","dVelocity","THREE","Vector3","bindMethods","direction","play","addEventListeners","pause","removeEventListeners","set","remove","sceneEl","el","canvasEl","canvas","addEventListener","bind","onTouchStart","onTouchEnd","removeEventListener","isVelocityActive","data","getVelocityDelta","z","clone","e","touches","length","preventDefault"],"mappings":"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","sourcesContent":["/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: { default: true },\n    reverseEnabled: { default: true }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n    this.direction = 0;\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n  },\n\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n    if (!canvasEl) { return; }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!this.direction;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.direction;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    this.direction = -1;\n    if (this.data.reverseEnabled && e.touches.length === 2) {\n      this.direction = 1;\n    }\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    this.direction = 0;\n    e.preventDefault();\n  }\n});\n"]},"metadata":{},"sourceType":"script"}