{"ast":null,"code":"var vg = module.exports = {\n  VERSION: \"0.1.1\",\n  PI: Math.PI,\n  TAU: 2 * Math.PI,\n  DEG_TO_RAD: .0174532925,\n  RAD_TO_DEG: 57.2957795,\n  SQRT3: Math.sqrt(3),\n  TILE: \"tile\",\n  ENT: \"entity\",\n  STR: \"structure\",\n  HEX: \"hex\",\n  SQR: \"square\",\n  ABS: \"abstract\"\n};\nvg.Board = function (e, t) {\n  if (!e) throw new Error(\"You must pass in a grid system for the board to use.\");\n  this.tiles = [], this.tileGroup = null, this.group = new THREE.Object3D(), this.grid = null, this.overlay = null, this.finder = new vg.AStarFinder(t), vg.Loader.init(), this.setGrid(e);\n}, vg.Board.prototype = {\n  setEntityOnTile: function (e, t) {\n    var i = this.grid.cellToPixel(t.cell);\n    e.position.copy(i), e.position.y += e.heightOffset || 0, e.tile && (e.tile.entity = null), e.tile = t, t.entity = e;\n  },\n  addTile: function (e) {\n    var t = this.tiles.indexOf(e);\n    -1 === t && (this.tiles.push(e), this.snapTileToGrid(e), e.position.y = 0, this.tileGroup.add(e.mesh), this.grid.add(e.cell), e.cell.tile = e);\n  },\n  removeTile: function (e) {\n    if (e) {\n      var t = this.tiles.indexOf(e);\n      this.grid.remove(e.cell), -1 !== t && this.tiles.splice(t, 1), e.dispose();\n    }\n  },\n  removeAllTiles: function () {\n    if (this.tileGroup) for (var e = this.tileGroup.children, t = 0; t < e.length; t++) this.tileGroup.remove(e[t]);\n  },\n  getTileAtCell: function (e) {\n    var t = this.grid.cellToHash(e);\n    return e.tile || (\"undefined\" != typeof this.grid.cells[t] ? this.grid.cells[t].tile : null);\n  },\n  snapToGrid: function (e) {\n    var t = this.grid.pixelToCell(e);\n    e.copy(this.grid.cellToPixel(t));\n  },\n  snapTileToGrid: function (e) {\n    if (e.cell) e.position.copy(this.grid.cellToPixel(e.cell));else {\n      var t = this.grid.pixelToCell(e.position);\n      e.position.copy(this.grid.cellToPixel(t));\n    }\n    return e;\n  },\n  getRandomTile: function () {\n    var e = vg.Tools.randomInt(0, this.tiles.length - 1);\n    return this.tiles[e];\n  },\n  findPath: function (e, t, i) {\n    return this.finder.findPath(e.cell, t.cell, i, this.grid);\n  },\n  setGrid: function (e) {\n    this.group.remove(this.tileGroup), this.grid && e !== this.grid && (this.removeAllTiles(), this.tiles.forEach(function (e) {\n      this.grid.remove(e.cell), e.dispose();\n    }), this.grid.dispose()), this.grid = e, this.tiles = [], this.tileGroup = new THREE.Object3D(), this.group.add(this.tileGroup);\n  },\n  generateOverlay: function (e) {\n    var t = new THREE.LineBasicMaterial({\n      color: 0,\n      opacity: .3\n    });\n    this.overlay && this.group.remove(this.overlay), this.overlay = new THREE.Object3D(), this.grid.generateOverlay(e, this.overlay, t), this.group.add(this.overlay);\n  },\n  generateTilemap: function (e) {\n    this.reset();\n    var t = this.grid.generateTiles(e);\n    this.tiles = t, this.tileGroup = new THREE.Object3D();\n\n    for (var i = 0; i < t.length; i++) this.tileGroup.add(t[i].mesh);\n\n    this.group.add(this.tileGroup);\n  },\n  reset: function () {\n    this.removeAllTiles(), this.tileGroup && this.group.remove(this.tileGroup);\n  }\n}, vg.Board.prototype.constructor = vg.Board, vg.Cell = function (e, t, i, s) {\n  this.q = e || 0, this.r = t || 0, this.s = i || 0, this.h = s || 1, this.tile = null, this.userData = {}, this.walkable = !0, this._calcCost = 0, this._priority = 0, this._visited = !1, this._parent = null, this.uniqueID = vg.LinkedList.generateID();\n}, vg.Cell.prototype = {\n  set: function (e, t, i) {\n    return this.q = e, this.r = t, this.s = i, this;\n  },\n  copy: function (e) {\n    return this.q = e.q, this.r = e.r, this.s = e.s, this.h = e.h, this.tile = e.tile || null, this.userData = e.userData || {}, this.walkable = e.walkable, this;\n  },\n  add: function (e) {\n    return this.q += e.q, this.r += e.r, this.s += e.s, this;\n  },\n  equals: function (e) {\n    return this.q === e.q && this.r === e.r && this.s === e.s;\n  }\n}, vg.Cell.prototype.constructor = vg.Cell, vg.HexGrid = function (e) {\n  e = e || {}, this.type = vg.HEX, this.size = 5, this.cellSize = \"undefined\" == typeof e.cellSize ? 10 : e.cellSize, this.cells = {}, this.numCells = 0, this.extrudeSettings = null, this.autogenerated = !1;\n  var t,\n      i = [];\n\n  for (t = 0; 6 > t; t++) i.push(this._createVertex(t));\n\n  for (this.cellShape = new THREE.Shape(), this.cellShape.moveTo(i[0].x, i[0].y), t = 1; 6 > t; t++) this.cellShape.lineTo(i[t].x, i[t].y);\n\n  this.cellShape.lineTo(i[0].x, i[0].y), this.cellShape.autoClose = !0, this.cellGeo = new THREE.Geometry(), this.cellGeo.vertices = i, this.cellGeo.verticesNeedUpdate = !0, this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape), this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this._hashDelimeter = \".\", this._directions = [new vg.Cell(1, -1, 0), new vg.Cell(1, 0, -1), new vg.Cell(0, 1, -1), new vg.Cell(-1, 1, 0), new vg.Cell(-1, 0, 1), new vg.Cell(0, -1, 1)], this._diagonals = [new vg.Cell(2, -1, -1), new vg.Cell(1, 1, -2), new vg.Cell(-1, 2, -1), new vg.Cell(-2, 1, 1), new vg.Cell(-1, -1, 2), new vg.Cell(1, -2, 1)], this._list = [], this._vec3 = new THREE.Vector3(), this._cel = new vg.Cell(), this._conversionVec = new THREE.Vector3(), this._geoCache = [], this._matCache = [];\n}, vg.HexGrid.TWO_THIRDS = 2 / 3, vg.HexGrid.prototype = {\n  cellToPixel: function (e) {\n    return this._vec3.x = e.q * this._cellWidth * .75, this._vec3.y = e.h, this._vec3.z = -((e.s - e.r) * this._cellLength * .5), this._vec3;\n  },\n  pixelToCell: function (e) {\n    var t = e.x * (vg.HexGrid.TWO_THIRDS / this.cellSize),\n        i = (-e.x / 3 + vg.SQRT3 / 3 * e.z) / this.cellSize;\n    return this._cel.set(t, i, -t - i), this._cubeRound(this._cel);\n  },\n  getCellAt: function (e) {\n    var t = e.x * (vg.HexGrid.TWO_THIRDS / this.cellSize),\n        i = (-e.x / 3 + vg.SQRT3 / 3 * e.z) / this.cellSize;\n    return this._cel.set(t, i, -t - i), this._cubeRound(this._cel), this.cells[this.cellToHash(this._cel)];\n  },\n  getNeighbors: function (e, t, i) {\n    var s,\n        n,\n        l = this._directions.length;\n\n    for (this._list.length = 0, s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._directions[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n\n    if (t) for (s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._diagonals[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n    return this._list;\n  },\n  getRandomCell: function () {\n    var e,\n        t = 0,\n        i = vg.Tools.randomInt(0, this.numCells);\n\n    for (e in this.cells) {\n      if (t === i) return this.cells[e];\n      t++;\n    }\n\n    return this.cells[e];\n  },\n  cellToHash: function (e) {\n    return e.q + this._hashDelimeter + e.r + this._hashDelimeter + e.s;\n  },\n  distance: function (e, t) {\n    var i = Math.max(Math.abs(e.q - t.q), Math.abs(e.r - t.r), Math.abs(e.s - t.s));\n    return i += t.h - e.h;\n  },\n  clearPath: function () {\n    var e, t;\n\n    for (e in this.cells) t = this.cells[e], t._calcCost = 0, t._priority = 0, t._parent = null, t._visited = !1;\n  },\n  traverse: function (e) {\n    var t;\n\n    for (t in this.cells) e(this.cells[t]);\n  },\n  generateTile: function (e, t, i) {\n    var s = Math.abs(e.h);\n    1 > s && (s = 1);\n    var n = this._geoCache[s];\n    n || (this.extrudeSettings.amount = s, n = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings), this._geoCache[s] = n);\n    var l = new vg.Tile({\n      size: this.cellSize,\n      scale: t,\n      cell: e,\n      geometry: n,\n      material: i\n    });\n    return e.tile = l, l;\n  },\n  generateTiles: function (e) {\n    e = e || {};\n    var t = [],\n        i = {\n      tileScale: .95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: !0,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: .5,\n        bevelThickness: .5\n      }\n    };\n    i = vg.Tools.merge(i, e), this.cellSize = i.cellSize, this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this.autogenerated = !0, this.extrudeSettings = i.extrudeSettings;\n    var s, n, l;\n\n    for (s in this.cells) l = this.cells[s], n = this.generateTile(l, i.tileScale, i.material), n.position.copy(this.cellToPixel(l)), n.position.y = 0, t.push(n);\n\n    return t;\n  },\n  generateTilePoly: function (e) {\n    e || (e = new THREE.MeshBasicMaterial({\n      color: 2405631\n    }));\n    var t = new THREE.Mesh(this.cellShapeGeo, e);\n    return this._vec3.set(1, 0, 0), t.rotateOnAxis(this._vec3, vg.PI / 2), t;\n  },\n  generate: function (e) {\n    e = e || {}, this.size = \"undefined\" == typeof e.size ? this.size : e.size;\n    var t, i, s, n;\n\n    for (t = -this.size; t < this.size + 1; t++) for (i = -this.size; i < this.size + 1; i++) s = -t - i, Math.abs(t) <= this.size && Math.abs(i) <= this.size && Math.abs(s) <= this.size && (n = new vg.Cell(t, i, s), this.add(n));\n  },\n  generateOverlay: function (e, t, i) {\n    var s,\n        n,\n        l,\n        r = this.cellShape.createPointsGeometry();\n\n    for (s = -e; e + 1 > s; s++) for (n = -e; e + 1 > n; n++) if (l = -s - n, Math.abs(s) <= e && Math.abs(n) <= e && Math.abs(l) <= e) {\n      this._cel.set(s, n, l);\n\n      var h = new THREE.Line(r, i);\n      h.position.copy(this.cellToPixel(this._cel)), h.rotation.x = 90 * vg.DEG_TO_RAD, t.add(h);\n    }\n  },\n  add: function (e) {\n    var t = this.cellToHash(e);\n    if (!this.cells[t]) return this.cells[t] = e, this.numCells++, e;\n  },\n  remove: function (e) {\n    var t = this.cellToHash(e);\n    this.cells[t] && (delete this.cells[t], this.numCells--);\n  },\n  dispose: function () {\n    this.cells = null, this.numCells = 0, this.cellShape = null, this.cellGeo.dispose(), this.cellGeo = null, this.cellShapeGeo.dispose(), this.cellShapeGeo = null, this._list = null, this._vec3 = null, this._conversionVec = null, this._geoCache = null, this._matCache = null;\n  },\n  load: function (e, t, i) {\n    var s = this;\n    vg.Tools.getJSON({\n      url: e,\n      callback: function (e) {\n        s.fromJSON(e), t.call(i || null, e);\n      },\n      cache: !1,\n      scope: s\n    });\n  },\n  fromJSON: function (e) {\n    var t,\n        i,\n        s = e.cells;\n\n    for (this.cells = {}, this.numCells = 0, this.size = e.size, this.cellSize = e.cellSize, this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this.extrudeSettings = e.extrudeSettings, this.autogenerated = e.autogenerated, t = 0; t < s.length; t++) i = new vg.Cell(), i.copy(s[t]), this.add(i);\n  },\n  toJSON: function () {\n    var e,\n        t,\n        i = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    },\n        s = [];\n\n    for (t in this.cells) e = this.cells[t], s.push({\n      q: e.q,\n      r: e.r,\n      s: e.s,\n      h: e.h,\n      walkable: e.walkable,\n      userData: e.userData\n    });\n\n    return i.cells = s, i;\n  },\n  _createVertex: function (e) {\n    var t = vg.TAU / 6 * e;\n    return new THREE.Vector3(this.cellSize * Math.cos(t), this.cellSize * Math.sin(t), 0);\n  },\n  _cubeRound: function (e) {\n    var t = Math.round(e.q),\n        i = Math.round(e.r),\n        s = Math.round(e.s),\n        n = Math.abs(t - e.q),\n        l = Math.abs(i - e.r),\n        r = Math.abs(s - e.s);\n    return n > l && n > r ? t = -i - s : l > r ? i = -t - s : s = -t - i, this._cel.set(t, i, s);\n  }\n}, vg.HexGrid.prototype.constructor = vg.HexGrid, vg.SqrGrid = function (e) {\n  e = e || {}, this.type = vg.SQR, this.size = 5, this.cellSize = \"undefined\" == typeof e.cellSize ? 10 : e.cellSize, this.cells = {}, this.numCells = 0, this.extrudeSettings = null, this.autogenerated = !1;\n  var t = [];\n  t.push(new THREE.Vector3()), t.push(new THREE.Vector3(-this.cellSize, this.cellSize)), t.push(new THREE.Vector3(this.cellSize, this.cellSize)), t.push(new THREE.Vector3(this.cellSize, -this.cellSize)), this.cellShape = new THREE.Shape(), this.cellShape.moveTo(-this.cellSize, -this.cellSize), this.cellShape.lineTo(-this.cellSize, this.cellSize), this.cellShape.lineTo(this.cellSize, this.cellSize), this.cellShape.lineTo(this.cellSize, -this.cellSize), this.cellShape.lineTo(-this.cellSize, -this.cellSize), this.cellGeo = new THREE.Geometry(), this.cellGeo.vertices = t, this.cellGeo.verticesNeedUpdate = !0, this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape), this._fullCellSize = 2 * this.cellSize, this._hashDelimeter = \".\", this._directions = [new vg.Cell(1, 0, 0), new vg.Cell(0, -1, 0), new vg.Cell(-1, 0, 0), new vg.Cell(0, 1, 0)], this._diagonals = [new vg.Cell(-1, -1, 0), new vg.Cell(-1, 1, 0), new vg.Cell(1, 1, 0), new vg.Cell(1, -1, 0)], this._list = [], this._vec3 = new THREE.Vector3(), this._cel = new vg.Cell(), this._conversionVec = new THREE.Vector3(), this._geoCache = [], this._matCache = [];\n}, vg.SqrGrid.prototype = {\n  cellToPixel: function (e) {\n    return this._vec3.x = e.q * this._fullCellSize, this._vec3.y = e.h, this._vec3.z = e.r * this._fullCellSize, this._vec3;\n  },\n  pixelToCell: function (e) {\n    var t = Math.round(e.x / this._fullCellSize),\n        i = Math.round(e.z / this._fullCellSize);\n    return this._cel.set(t, i, 0);\n  },\n  getCellAt: function (e) {\n    var t = Math.round(e.x / this._fullCellSize),\n        i = Math.round(e.z / this._fullCellSize);\n    return this._cel.set(t, i), this.cells[this.cellToHash(this._cel)];\n  },\n  getNeighbors: function (e, t, i) {\n    var s,\n        n,\n        l = this._directions.length;\n\n    for (this._list.length = 0, s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._directions[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n\n    if (t) for (s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._diagonals[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n    return this._list;\n  },\n  getRandomCell: function () {\n    var e,\n        t = 0,\n        i = vg.Tools.randomInt(0, this.numCells);\n\n    for (e in this.cells) {\n      if (t === i) return this.cells[e];\n      t++;\n    }\n\n    return this.cells[e];\n  },\n  cellToHash: function (e) {\n    return e.q + this._hashDelimeter + e.r;\n  },\n  distance: function (e, t) {\n    var i = Math.max(Math.abs(e.q - t.q), Math.abs(e.r - t.r));\n    return i += t.h - e.h;\n  },\n  clearPath: function () {\n    var e, t;\n\n    for (e in this.cells) t = this.cells[e], t._calcCost = 0, t._priority = 0, t._parent = null, t._visited = !1;\n  },\n  traverse: function (e) {\n    var t;\n\n    for (t in this.cells) e(this.cells[t]);\n  },\n  generateTile: function (e, t, i) {\n    var s = Math.abs(e.h);\n    1 > s && (s = 1);\n    var n = this._geoCache[s];\n    n || (this.extrudeSettings.amount = s, n = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings), this._geoCache[s] = n);\n    var l = new vg.Tile({\n      size: this.cellSize,\n      scale: t,\n      cell: e,\n      geometry: n,\n      material: i\n    });\n    return e.tile = l, l;\n  },\n  generateTiles: function (e) {\n    e = e || {};\n    var t = [],\n        i = {\n      tileScale: .95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: !0,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: .5,\n        bevelThickness: .5\n      }\n    };\n    i = vg.Tools.merge(i, e), this.cellSize = i.cellSize, this._fullCellSize = 2 * this.cellSize, this.autogenerated = !0, this.extrudeSettings = i.extrudeSettings;\n    var s, n, l;\n\n    for (s in this.cells) l = this.cells[s], n = this.generateTile(l, i.tileScale, i.material), n.position.copy(this.cellToPixel(l)), n.position.y = 0, t.push(n);\n\n    return t;\n  },\n  generateTilePoly: function (e) {\n    e || (e = new THREE.MeshBasicMaterial({\n      color: 2405631\n    }));\n    var t = new THREE.Mesh(this.cellShapeGeo, e);\n    return this._vec3.set(1, 0, 0), t.rotateOnAxis(this._vec3, vg.PI / 2), t;\n  },\n  generate: function (e) {\n    e = e || {}, this.size = \"undefined\" == typeof e.size ? this.size : e.size;\n    var t,\n        i,\n        s,\n        n = Math.ceil(this.size / 2);\n\n    for (t = -n; n > t; t++) for (i = -n; n > i; i++) s = new vg.Cell(t, i + 1), this.add(s);\n  },\n  generateOverlay: function (e, t, i) {\n    var s,\n        n,\n        l = Math.ceil(e / 2);\n\n    for (s = -l; l > s; s++) for (n = -l; l > n; n++) {\n      this._cel.set(s, n);\n\n      var r = new THREE.Line(this.cellGeo, i);\n      r.position.copy(this.cellToPixel(this._cel)), r.rotation.x = 90 * vg.DEG_TO_RAD, t.add(r);\n    }\n  },\n  add: function (e) {\n    var t = this.cellToHash(e);\n    if (!this.cells[t]) return this.cells[t] = e, this.numCells++, e;\n  },\n  remove: function (e) {\n    var t = this.cellToHash(e);\n    this.cells[t] && (delete this.cells[t], this.numCells--);\n  },\n  dispose: function () {\n    this.cells = null, this.numCells = 0, this.cellShape = null, this.cellGeo.dispose(), this.cellGeo = null, this.cellShapeGeo.dispose(), this.cellShapeGeo = null, this._list = null, this._vec3 = null, this._conversionVec = null, this._geoCache = null, this._matCache = null;\n  },\n  load: function (e, t, i) {\n    vg.Tools.getJSON({\n      url: e,\n      callback: function (e) {\n        this.fromJSON(e), t.call(i || null, e);\n      },\n      cache: !1,\n      scope: this\n    });\n  },\n  fromJSON: function (e) {\n    var t,\n        i,\n        s = e.cells;\n\n    for (this.cells = {}, this.numCells = 0, this.size = e.size, this.cellSize = e.cellSize, this._fullCellSize = 2 * this.cellSize, this.extrudeSettings = e.extrudeSettings, this.autogenerated = e.autogenerated, t = 0; t < s.length; t++) i = new vg.Cell(), i.copy(s[t]), this.add(i);\n  },\n  toJSON: function () {\n    var e,\n        t,\n        i = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    },\n        s = [];\n\n    for (t in this.cells) e = this.cells[t], s.push({\n      q: e.q,\n      r: e.r,\n      s: e.s,\n      h: e.h,\n      walkable: e.walkable,\n      userData: e.userData\n    });\n\n    return i.cells = s, i;\n  }\n}, vg.SqrGrid.prototype.constructor = vg.SqrGrid, vg.Tile = function (e) {\n  e = e || {};\n  var t = {\n    cell: null,\n    geometry: null,\n    material: null\n  };\n  if (t = vg.Tools.merge(t, e), !t.cell || !t.geometry) throw new Error(\"Missing vg.Tile configuration\");\n  this.cell = t.cell, this.cell.tile && this.cell.tile !== this && this.cell.tile.dispose(), this.cell.tile = this, this.uniqueID = vg.Tools.generateID(), this.geometry = t.geometry, this.material = t.material, this.material || (this.material = new THREE.MeshPhongMaterial({\n    color: vg.Tools.randomizeRGB(\"30, 30, 30\", 13)\n  })), this.objectType = vg.TILE, this.entity = null, this.userData = {}, this.selected = !1, this.highlight = \"0x0084cc\", this.mesh = new THREE.Mesh(this.geometry, this.material), this.mesh.userData.structure = this, this.position = this.mesh.position, this.rotation = this.mesh.rotation, this.rotation.x = -90 * vg.DEG_TO_RAD, this.mesh.scale.set(t.scale, t.scale, 1), this.material.emissive ? this._emissive = this.material.emissive.getHex() : this._emissive = null;\n}, vg.Tile.prototype = {\n  select: function () {\n    return this.material.emissive && this.material.emissive.setHex(this.highlight), this.selected = !0, this;\n  },\n  deselect: function () {\n    return null !== this._emissive && this.material.emissive && this.material.emissive.setHex(this._emissive), this.selected = !1, this;\n  },\n  toggle: function () {\n    return this.selected ? this.deselect() : this.select(), this;\n  },\n  dispose: function () {\n    this.cell && this.cell.tile && (this.cell.tile = null), this.cell = null, this.position = null, this.rotation = null, this.mesh.parent && this.mesh.parent.remove(this.mesh), this.mesh.userData.structure = null, this.mesh = null, this.material = null, this.userData = null, this.entity = null, this.geometry = null, this._emissive = null;\n  }\n}, vg.Tile.prototype.constructor = vg.Tile, function () {\n  var e = function () {\n    this.obj = null, this.next = null, this.prev = null, this.free = !0;\n  },\n      t = function () {\n    this.first = null, this.last = null, this.length = 0, this.objToNodeMap = {}, this.uniqueID = Date.now() + \"\" + Math.floor(1e3 * Math.random()), this.sortArray = [];\n  };\n\n  t.generateID = function () {\n    return Math.random().toString(36).slice(2) + Date.now();\n  }, t.prototype = {\n    getNode: function (e) {\n      return this.objToNodeMap[e.uniqueID];\n    },\n    addNode: function (i) {\n      var s = new e();\n      if (!i.uniqueID) try {\n        i.uniqueID = t.generateID();\n      } catch (n) {\n        return console.error(\"[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier\"), null;\n      }\n      return s.obj = i, s.free = !1, this.objToNodeMap[i.uniqueID] = s, s;\n    },\n    swapObjects: function (e, t) {\n      this.objToNodeMap[e.obj.uniqueID] = null, this.objToNodeMap[t.uniqueID] = e, e.obj = t;\n    },\n    add: function (e) {\n      var t = this.objToNodeMap[e.uniqueID];\n\n      if (t) {\n        if (t.free === !1) return;\n        t.obj = e, t.free = !1, t.next = null, t.prev = null;\n      } else t = this.addNode(e);\n\n      if (this.first) {\n        if (!this.last) throw new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n        this.last.next = t, t.prev = this.last, this.last = t, t.next = null;\n      } else this.first = t, this.last = t, t.next = null, t.prev = null;\n\n      this.length++, this.showDebug && this.dump(\"after add\");\n    },\n    has: function (e) {\n      return !!this.objToNodeMap[e.uniqueID];\n    },\n    moveUp: function (e) {\n      this.dump(\"before move up\");\n      var t = this.getNode(e);\n      if (!t) throw \"Oops, trying to move an object that isn't in the list\";\n\n      if (t.prev) {\n        var i = t.prev,\n            s = i.prev;\n        t == this.last && (this.last = i);\n        var n = t.next;\n        s && (s.next = t), t.next = i, t.prev = i.prev, i.next = n, i.prev = t, this.first == i && (this.first = t);\n      }\n    },\n    moveDown: function (e) {\n      var t = this.getNode(e);\n      if (!t) throw \"Oops, trying to move an object that isn't in the list\";\n\n      if (t.next) {\n        var i = t.next;\n        this.moveUp(i.obj), this.last == i && (this.last = t);\n      }\n    },\n    sort: function (e) {\n      var t,\n          i,\n          s = this.sortArray,\n          n = this.first;\n\n      for (s.length = 0; n;) s.push(n.obj), n = n.next;\n\n      for (this.clear(), s.sort(e), i = s.length, t = 0; i > t; t++) this.add(s[t]);\n    },\n    remove: function (e) {\n      var t = this.getNode(e);\n      return !t || t.free ? !1 : (t.prev && (t.prev.next = t.next), t.next && (t.next.prev = t.prev), t.prev || (this.first = t.next), t.next || (this.last = t.prev), t.free = !0, t.prev = null, t.next = null, this.length--, !0);\n    },\n    shift: function () {\n      var e = this.first;\n      return 0 === this.length ? null : (e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), this.first = e.next, e.next || (this.last = null), e.free = !0, e.prev = null, e.next = null, this.length--, e.obj);\n    },\n    pop: function () {\n      var e = this.last;\n      return 0 === this.length ? null : (e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), this.last = e.prev, e.prev || (this.first = null), e.free = !0, e.prev = null, e.next = null, this.length--, e.obj);\n    },\n    concat: function (e) {\n      for (var t = e.first; t;) this.add(t.obj), t = t.next;\n    },\n    clear: function () {\n      for (var e = this.first; e;) e.free = !0, e = e.next;\n\n      this.first = null, this.length = 0;\n    },\n    dispose: function () {\n      for (var e = this.first; e;) e.obj = null, e = e.next;\n\n      this.first = null, this.objToNodeMap = null;\n    },\n    dump: function (e) {\n      console.log(\"====================\" + e + \"=====================\");\n\n      for (var t = this.first; t;) console.log(\"{\" + t.obj.toString() + \"} previous=\" + (t.prev ? t.prev.obj : \"NULL\")), t = t.next();\n\n      console.log(\"===================================\"), console.log(\"Last: {\" + (this.last ? this.last.obj : \"NULL\") + \"} First: {\" + (this.first ? this.first.obj : \"NULL\") + \"}\");\n    }\n  }, t.prototype.constructor = t, vg.LinkedList = t;\n}(), function () {\n  var e = function (e, t, i, s, n) {\n    this._listener = t, this.isOnce = i, this.context = s, this.signal = e, this._priority = n || 0;\n  };\n\n  e.prototype = {\n    active: !0,\n    params: null,\n    execute: function (e) {\n      var t, i;\n      return this.active && this._listener && (i = this.params ? this.params.concat(e) : e, t = this._listener.apply(this.context, i), this.isOnce && this.detach()), t;\n    },\n    detach: function () {\n      return this.isBound() ? this.signal.remove(this._listener, this.context) : null;\n    },\n    isBound: function () {\n      return !!this.signal && !!this._listener;\n    },\n    _destroy: function () {\n      delete this.signal, delete this._listener, delete this.context;\n    },\n    toString: function () {\n      return \"[SignalBinding isOnce:\" + this.isOnce + \", isBound:\" + this.isBound() + \", active:\" + this.active + \"]\";\n    }\n  }, e.prototype.constructor = e;\n\n  var t = function () {\n    this._bindings = [], this._prevParams = null;\n    var e = this;\n\n    this.dispatch = function () {\n      t.prototype.dispatch.apply(e, arguments);\n    };\n  };\n\n  t.prototype = {\n    memorize: !1,\n    _shouldPropagate: !0,\n    active: !0,\n    validateListener: function (e, t) {\n      if (\"function\" != typeof e) throw new Error(\"Signal: listener is a required param of {fn}() and should be a Function.\".replace(\"{fn}\", t));\n    },\n    _registerListener: function (t, i, s, n) {\n      var l,\n          r = this._indexOfListener(t, s);\n\n      if (-1 !== r) {\n        if (l = this._bindings[r], l.isOnce !== i) throw new Error(\"You cannot add\" + (i ? \"\" : \"Once\") + \"() then add\" + (i ? \"Once\" : \"\") + \"() the same listener without removing the relationship first.\");\n      } else l = new e(this, t, i, s, n), this._addBinding(l);\n\n      return this.memorize && this._prevParams && l.execute(this._prevParams), l;\n    },\n    _addBinding: function (e) {\n      var t = this._bindings.length;\n\n      do t--; while (this._bindings[t] && e._priority <= this._bindings[t]._priority);\n\n      this._bindings.splice(t + 1, 0, e);\n    },\n    _indexOfListener: function (e, t) {\n      for (var i, s = this._bindings.length; s--;) if (i = this._bindings[s], i._listener === e && i.context === t) return s;\n\n      return -1;\n    },\n    has: function (e, t) {\n      return -1 !== this._indexOfListener(e, t);\n    },\n    add: function (e, t, i) {\n      return this.validateListener(e, \"add\"), this._registerListener(e, !1, t, i);\n    },\n    addOnce: function (e, t, i) {\n      return this.validateListener(e, \"addOnce\"), this._registerListener(e, !0, t, i);\n    },\n    remove: function (e, t) {\n      this.validateListener(e, \"remove\");\n\n      var i = this._indexOfListener(e, t);\n\n      return -1 !== i && (this._bindings[i]._destroy(), this._bindings.splice(i, 1)), e;\n    },\n    removeAll: function (e) {\n      \"undefined\" == typeof e && (e = null);\n\n      for (var t = this._bindings.length; t--;) e ? this._bindings[t].context === e && (this._bindings[t]._destroy(), this._bindings.splice(t, 1)) : this._bindings[t]._destroy();\n\n      e || (this._bindings.length = 0);\n    },\n    getNumListeners: function () {\n      return this._bindings.length;\n    },\n    halt: function () {\n      this._shouldPropagate = !1;\n    },\n    dispatch: function () {\n      if (this.active) {\n        var e,\n            t = Array.prototype.slice.call(arguments),\n            i = this._bindings.length;\n\n        if (this.memorize && (this._prevParams = t), i) {\n          e = this._bindings.slice(), this._shouldPropagate = !0;\n\n          do i--; while (e[i] && this._shouldPropagate && e[i].execute(t) !== !1);\n        }\n      }\n    },\n    forget: function () {\n      this._prevParams = null;\n    },\n    dispose: function () {\n      this.removeAll(), delete this._bindings, delete this._prevParams;\n    },\n    toString: function () {\n      return \"[Signal active:\" + this.active + \" numListeners:\" + this.getNumListeners() + \"]\";\n    }\n  }, t.prototype.constructor = t, vg.Signal = t;\n}(), vg.AStarFinder = function (e) {\n  e = e || {};\n  var t = {\n    allowDiagonal: !1,\n    heuristicFilter: null\n  };\n  t = vg.Tools.merge(t, e), this.allowDiagonal = t.allowDiagonal, this.heuristicFilter = t.heuristicFilter, this.list = new vg.LinkedList();\n}, vg.AStarFinder.prototype = {\n  findPath: function (e, t, i, s) {\n    var n, l, r, h, o, a;\n\n    for (i = i || this.heuristicFilter, s.clearPath(), this.list.clear(), this.list.add(e); this.list.length > 0;) {\n      if (this.list.sort(this.compare), n = this.list.shift(), n._visited = !0, n === t) return vg.PathUtil.backtrace(t);\n\n      for (r = s.getNeighbors(n, this.allowDiagonal, i), o = 0, a = r.length; a > o; o++) if (h = r[o], h.walkable && (l = n._calcCost + s.distance(n, h), !h._visited || l < h._calcCost)) {\n        if (h._visited = !0, h._parent = n, h._calcCost = l, h._priority = l + s.distance(t, h), h === t) return vg.PathUtil.backtrace(t);\n        this.list.add(h);\n      }\n    }\n\n    return null;\n  },\n  compare: function (e, t) {\n    return e._priority - t._priority;\n  }\n}, vg.AStarFinder.prototype.constructor = vg.AStarFinder, vg.PathUtil = {\n  backtrace: function (e) {\n    for (var t = [e]; e._parent;) e = e._parent, t.push(e);\n\n    return t.reverse();\n  },\n  biBacktrace: function (e, t) {\n    var i = this.backtrace(e),\n        s = this.backtrace(t);\n    return i.concat(s.reverse());\n  },\n  pathLength: function (e) {\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r = 0;\n\n    for (t = 1; t < e.length; ++t) i = e[t - 1], s = e[t], n = i[0] - s[0], l = i[1] - s[1], r += Math.sqrt(n * n + l * l);\n\n    return r;\n  },\n  interpolate: function (e, t, i, s) {\n    var n,\n        l,\n        r,\n        h,\n        o,\n        a,\n        c = Math.abs,\n        u = [];\n\n    for (r = c(i - e), h = c(s - t), n = i > e ? 1 : -1, l = s > t ? 1 : -1, o = r - h; e !== i || t !== s;) u.push([e, t]), a = 2 * o, a > -h && (o -= h, e += n), r > a && (o += r, t += l);\n\n    return u;\n  },\n  expandPath: function (e) {\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r,\n        h = [],\n        o = e.length;\n    if (2 > o) return h;\n\n    for (l = 0; o - 1 > l; ++l) for (t = e[l], i = e[l + 1], s = this.interpolate(t[0], t[1], i[0], i[1]), n = s.length, r = 0; n - 1 > r; ++r) h.push(s[r]);\n\n    return h.push(e[o - 1]), h;\n  },\n  smoothenPath: function (e, t) {\n    var i,\n        s,\n        n,\n        l,\n        r,\n        h,\n        o,\n        a,\n        c,\n        u,\n        d,\n        g,\n        p = t.length,\n        v = t[0][0],\n        f = t[0][1],\n        m = t[p - 1][0],\n        _ = t[p - 1][1];\n\n    for (i = v, s = f, r = [[i, s]], o = 2; p > o; ++o) {\n      for (c = t[o], n = c[0], l = c[1], u = this.interpolate(i, s, n, l), g = !1, a = 1; a < u.length; ++a) if (d = u[a], !e.isWalkableAt(d[0], d[1])) {\n        g = !0;\n        break;\n      }\n\n      g && (h = t[o - 1], r.push(h), i = h[0], s = h[1]);\n    }\n\n    return r.push([m, _]), r;\n  },\n  compressPath: function (e) {\n    if (e.length < 3) return e;\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r,\n        h = [],\n        o = e[0][0],\n        a = e[0][1],\n        c = e[1][0],\n        u = e[1][1],\n        d = c - o,\n        g = u - a;\n\n    for (l = Math.sqrt(d * d + g * g), d /= l, g /= l, h.push([o, a]), r = 2; r < e.length; r++) t = c, i = u, s = d, n = g, c = e[r][0], u = e[r][1], d = c - t, g = u - i, l = Math.sqrt(d * d + g * g), d /= l, g /= l, (d !== s || g !== n) && h.push([t, i]);\n\n    return h.push([c, u]), h;\n  }\n}, vg.Loader = {\n  manager: null,\n  imageLoader: null,\n  crossOrigin: !1,\n  init: function (e) {\n    this.crossOrigin = e || !1, this.manager = new THREE.LoadingManager(function () {}, function () {}, function () {\n      console.warn(\"Error loading images\");\n    }), this.imageLoader = new THREE.ImageLoader(this.manager), this.imageLoader.crossOrigin = e;\n  },\n  loadTexture: function (e, t, i, s) {\n    var n = new THREE.Texture(null, t);\n    return this.imageLoader.load(e, function (e) {\n      n.image = e, n.needsUpdate = !0, i && i(n);\n    }, null, function (e) {\n      s && s(e);\n    }), n.sourceFile = e, n;\n  }\n}, vg.MouseCaster = function (e, t, i) {\n  this.down = !1, this.rightDown = !1, this.pickedObject = null, this.selectedObject = null, this.allHits = null, this.active = !0, this.shift = !1, this.ctrl = !1, this.wheel = 0, this.position = new THREE.Vector3(), this.screenPosition = new THREE.Vector2(), this.signal = new vg.Signal(), this.group = e, this._camera = t, this._raycaster = new THREE.Raycaster(), this._preventDefault = !1, i = i || document, i.addEventListener(\"mousemove\", this._onDocumentMouseMove.bind(this), !1), i.addEventListener(\"mousedown\", this._onDocumentMouseDown.bind(this), !1), i.addEventListener(\"mouseup\", this._onDocumentMouseUp.bind(this), !1), i.addEventListener(\"mousewheel\", this._onMouseWheel.bind(this), !1), i.addEventListener(\"DOMMouseScroll\", this._onMouseWheel.bind(this), !1);\n}, vg.MouseCaster.OVER = \"over\", vg.MouseCaster.OUT = \"out\", vg.MouseCaster.DOWN = \"down\", vg.MouseCaster.UP = \"up\", vg.MouseCaster.CLICK = \"click\", vg.MouseCaster.WHEEL = \"wheel\", vg.MouseCaster.prototype = {\n  update: function () {\n    if (this.active) {\n      this._raycaster.setFromCamera(this.screenPosition, this._camera);\n\n      var e,\n          t,\n          i = this._raycaster.intersectObject(this.group, !0);\n\n      i.length > 0 ? (e = i[0], t = e.object.userData.structure, this.pickedObject != t && (this.pickedObject && this.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject), this.pickedObject = t, this.selectedObject = null, this.signal.dispatch(vg.MouseCaster.OVER, this.pickedObject)), this.position.copy(e.point), this.screenPosition.z = e.distance) : (this.pickedObject && this.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject), this.pickedObject = null, this.selectedObject = null), this.allHits = i;\n    }\n  },\n  preventDefault: function () {\n    this._preventDefault = !0;\n  },\n  _onDocumentMouseDown: function (e) {\n    return e = e || window.event, e.preventDefault(), this._preventDefault ? (this._preventDefault = !1, !1) : (this.pickedObject && (this.selectedObject = this.pickedObject), this.shift = e.shiftKey, this.ctrl = e.ctrlKey, this.down = 1 === e.which, this.rightDown = 3 === e.which, void this.signal.dispatch(vg.MouseCaster.DOWN, this.pickedObject));\n  },\n  _onDocumentMouseUp: function (e) {\n    return e.preventDefault(), this._preventDefault ? (this._preventDefault = !1, !1) : (this.shift = e.shiftKey, this.ctrl = e.ctrlKey, this.signal.dispatch(vg.MouseCaster.UP, this.pickedObject), this.selectedObject && this.pickedObject && this.selectedObject.uniqueID === this.pickedObject.uniqueID && this.signal.dispatch(vg.MouseCaster.CLICK, this.pickedObject), this.down = 1 === e.which ? !1 : this.down, void (this.rightDown = 3 === e.which ? !1 : this.rightDown));\n  },\n  _onDocumentMouseMove: function (e) {\n    e.preventDefault(), this.screenPosition.x = e.clientX / window.innerWidth * 2 - 1, this.screenPosition.y = 2 * -(e.clientY / window.innerHeight) + 1;\n  },\n  _onMouseWheel: function (e) {\n    if (this.active) {\n      e.preventDefault(), e.stopPropagation();\n      var t = 0;\n      void 0 !== e.wheelDelta ? t = e.wheelDelta : void 0 !== e.detail && (t = -e.detail), t > 0 ? this.wheel++ : this.wheel--, this.signal.dispatch(vg.MouseCaster.WHEEL, this.wheel);\n    }\n  }\n}, vg.MouseCaster.prototype.constructor = vg.MouseCaster, vg.Scene = function (e, t) {\n  var i = {\n    element: document.body,\n    alpha: !0,\n    antialias: !0,\n    clearColor: \"#fff\",\n    sortObjects: !1,\n    fog: null,\n    light: new THREE.DirectionalLight(16777215),\n    lightPosition: null,\n    cameraType: \"PerspectiveCamera\",\n    cameraPosition: null,\n    orthoZoom: 4\n  },\n      s = {\n    minDistance: 100,\n    maxDistance: 1e3,\n    zoomSpeed: 2,\n    noZoom: !1\n  };\n\n  if (i = vg.Tools.merge(i, e), \"boolean\" != typeof t && (s = vg.Tools.merge(s, t)), this.renderer = new THREE.WebGLRenderer({\n    alpha: i.alpha,\n    antialias: i.antialias\n  }), this.renderer.setClearColor(i.clearColor, 0), this.renderer.sortObjects = i.sortObjects, this.width = window.innerWidth, this.height = window.innerHeight, this.orthoZoom = i.orthoZoom, this.container = new THREE.Scene(), this.container.fog = i.fog, this.container.add(new THREE.AmbientLight(14540253)), i.lightPosition || i.light.position.set(-1, 1, -1).normalize(), this.container.add(i.light), \"OrthographicCamera\" === i.cameraType) {\n    var n = window.innerWidth / this.orthoZoom,\n        l = window.innerHeight / this.orthoZoom;\n    this.camera = new THREE.OrthographicCamera(n / -2, n / 2, l / 2, l / -2, 1, 5e3);\n  } else this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5e3);\n\n  this.contolled = !!t, this.contolled && (this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement), this.controls.minDistance = s.minDistance, this.controls.maxDistance = s.maxDistance, this.controls.zoomSpeed = s.zoomSpeed, this.controls.noZoom = s.noZoom), i.cameraPosition && this.camera.position.copy(i.cameraPosition), window.addEventListener(\"resize\", function () {\n    if (this.width = window.innerWidth, this.height = window.innerHeight, \"OrthographicCamera\" === this.camera.type) {\n      var e = this.width / this.orthoZoom,\n          t = this.height / this.orthoZoom;\n      this.camera.left = e / -2, this.camera.right = e / 2, this.camera.top = t / 2, this.camera.bottom = t / -2;\n    } else this.camera.aspect = this.width / this.height;\n\n    this.camera.updateProjectionMatrix(), this.renderer.setSize(this.width, this.height);\n  }.bind(this), !1), this.attachTo(i.element);\n}, vg.Scene.prototype = {\n  attachTo: function (e) {\n    e.style.width = this.width + \"px\", e.style.height = this.height + \"px\", this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.setSize(this.width, this.height), e.appendChild(this.renderer.domElement);\n  },\n  add: function (e) {\n    this.container.add(e);\n  },\n  remove: function (e) {\n    this.container.remove(e);\n  },\n  render: function () {\n    this.contolled && this.controls.update(), this.renderer.render(this.container, this.camera);\n  },\n  updateOrthoZoom: function () {\n    if (this.orthoZoom <= 0) return void (this.orthoZoom = 0);\n    var e = this.width / this.orthoZoom,\n        t = this.height / this.orthoZoom;\n    this.camera.left = e / -2, this.camera.right = e / 2, this.camera.top = t / 2, this.camera.bottom = t / -2, this.camera.updateProjectionMatrix();\n  },\n  focusOn: function (e) {\n    this.camera.lookAt(e.position);\n  }\n}, vg.Scene.prototype.constructor = vg.Scene, vg.SelectionManager = function (e) {\n  this.mouse = e, this.onSelect = new vg.Signal(), this.onDeselect = new vg.Signal(), this.selected = null, this.toggleSelection = !1, this.mouse.signal.add(this.onMouse, this);\n}, vg.SelectionManager.prototype = {\n  select: function (e, t) {\n    e && (t = t || !0, this.selected !== e && this.clearSelection(t), e.selected ? this.toggleSelection && (t && this.onDeselect.dispatch(e), e.deselect()) : e.select(), this.selected = e, t && this.onSelect.dispatch(e));\n  },\n  clearSelection: function (e) {\n    e = e || !0, this.selected && (e && this.onDeselect.dispatch(this.selected), this.selected.deselect()), this.selected = null;\n  },\n  onMouse: function (e, t) {\n    switch (e) {\n      case vg.MouseCaster.DOWN:\n        t || this.clearSelection();\n        break;\n\n      case vg.MouseCaster.CLICK:\n        this.select(t);\n    }\n  }\n}, vg.SelectionManager.prototype.constructor = vg.SelectionManager, vg.Tools = {\n  clamp: function (e, t, i) {\n    return Math.max(t, Math.min(i, e));\n  },\n  sign: function (e) {\n    return e && e / Math.abs(e);\n  },\n  random: function (e, t) {\n    return 1 === arguments.length ? Math.random() * e - .5 * e : Math.random() * (t - e) + e;\n  },\n  randomInt: function (e, t) {\n    return 1 === arguments.length ? Math.random() * e - .5 * e | 0 : Math.random() * (t - e + 1) + e | 0;\n  },\n  normalize: function (e, t, i) {\n    return (e - t) / (i - t);\n  },\n  getShortRotation: function (e) {\n    return e %= this.TAU, e > this.PI ? e -= this.TAU : e < -this.PI && (e += this.TAU), e;\n  },\n  generateID: function () {\n    return Math.random().toString(36).slice(2) + Date.now();\n  },\n  isPlainObject: function (e) {\n    if (\"object\" != typeof e || e.nodeType || e === e.window) return !1;\n\n    try {\n      if (e.constructor && !Object.prototype.hasOwnProperty.call(e.constructor.prototype, \"isPrototypeOf\")) return !1;\n    } catch (t) {\n      return !1;\n    }\n\n    return !0;\n  },\n  merge: function (e, t) {\n    var i = this,\n        s = Array.isArray(t),\n        n = s && [] || {};\n    return s ? (e = e || [], n = n.concat(e), t.forEach(function (t, s) {\n      \"undefined\" == typeof n[s] ? n[s] = t : i.isPlainObject(t) ? n[s] = i.merge(e[s], t) : -1 === e.indexOf(t) && n.push(t);\n    }), n) : (e && i.isPlainObject(e) && Object.keys(e).forEach(function (t) {\n      n[t] = e[t];\n    }), Object.keys(t).forEach(function (s) {\n      t[s] && i.isPlainObject(t[s]) && e[s] ? n[s] = i.merge(e[s], t[s]) : n[s] = t[s];\n    }), n);\n  },\n  now: function () {\n    return window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n  },\n  empty: function (e) {\n    for (; e.lastChild;) e.removeChild(e.lastChild);\n  },\n  radixSort: function (e, t, i, s) {\n    if (t = t || 0, i = i || e.length, s = s || 31, !(t >= i - 1 || 0 > s)) {\n      for (var n = t, l = i, r = 1 << s; l > n;) if (e[n] & r) {\n        --l;\n        var h = e[n];\n        e[n] = e[l], e[l] = h;\n      } else ++n;\n\n      this.radixSort(e, t, l, s - 1), this.radixSort(e, l, i, s - 1);\n    }\n  },\n  randomizeRGB: function (e, t) {\n    var i,\n        s,\n        n = e.split(\",\"),\n        l = \"rgb(\";\n\n    for (t = this.randomInt(t), i = 0; 3 > i; i++) s = parseInt(n[i]) + t, 0 > s ? s = 0 : s > 255 && (s = 255), l += s + \",\";\n\n    return l = l.substring(0, l.length - 1), l += \")\";\n  },\n  getJSON: function (e) {\n    var t = new XMLHttpRequest(),\n        i = \"undefined\" == typeof e.cache ? !1 : e.cache,\n        s = i ? e.url : e.url + \"?t=\" + Math.floor(1e4 * Math.random()) + Date.now();\n    t.onreadystatechange = function () {\n      if (200 === this.status) {\n        var t = null;\n\n        try {\n          t = JSON.parse(this.responseText);\n        } catch (i) {\n          return;\n        }\n\n        return void e.callback.call(e.scope || null, t);\n      }\n\n      0 !== this.status && console.warn(\"[Tools.getJSON] Error: \" + this.status + \" (\" + this.statusText + \") :: \" + e.url);\n    }, t.open(\"GET\", s, !0), t.setRequestHeader(\"Accept\", \"application/json\"), t.setRequestHeader(\"Content-Type\", \"application/json\"), t.send(\"\");\n  }\n};","map":{"version":3,"sources":["vg.js","Board.js","grids/Cell.js","grids/HexGrid.js","grids/SqrGrid.js","grids/Tile.js","lib/LinkedList.js","lib/Signal.js","pathing/AStarFinder.js","pathing/PathUtil.js","utils/Loader.js","utils/MouseCaster.js","utils/Scene.js","utils/SelectionManager.js","utils/Tools.js"],"names":["VERSION","PI","TAU","DEG_TO_RAD","RAD_TO_DEG","SQRT3","TILE","ENT","STR","HEX","SQR","ABS","vg","this","setEntityOnTile","entity","tile","addTile","removeTile","removeAllTiles","tiles","getTileAtCell","snapToGrid","pos","snapTileToGrid","getRandomTile","findPath","setGrid","t","generateOverlay","opacity","generateTilemap","reset","set","copy","add","equals","config","verts","cellToPixel","pixelToCell","r","getCellAt","getNeighbors","n","getRandomCell","i","cellToHash","distance","d","clearPath","c","traverse","cb","generateTile","geo","size","scale","geometry","material","cell","generateTiles","settings","tileScale","cellSize","extrudeSettings","bevelEnabled","bevelSegments","bevelSize","bevelThickness","generateTilePoly","mesh","generate","z","Math","line","overlayObj","remove","dispose","load","url","callback","self","cache","scope","fromJSON","cells","toJSON","autogenerated","q","s","h","walkable","userData","json","_createVertex","_cubeRound","ry","rz","xDiff","yDiff","zDiff","rx","half","color","select","deselect","toggle","LinkedList","getNode","addNode","obj","console","node","swapObjects","has","moveUp","a","b","moveDown","sort","sortArray","l","shift","pop","concat","clear","next","dump","SignalBinding","active","params","execute","handlerReturn","detach","isBound","_destroy","toString","Signal","memorize","_shouldPropagate","validateListener","_registerListener","binding","_addBinding","_indexOfListener","cur","addOnce","removeAll","context","getNumListeners","halt","dispatch","bindings","forget","finderConfig","allowDiagonal","heuristicFilter","heuristic","current","neighbors","costSoFar","compare","backtrace","path","biBacktrace","pathB","pathLength","dx","dy","sum","interpolate","sx","sy","err","e2","x0","y0","expandPath","len","coord0","coord1","interpolated","interpolatedLen","expanded","smoothenPath","x1","y1","ex","newPath","lastValidCoord","coord","ey","testCoord","blocked","compressPath","px","py","lx","sq","compressed","ly","ldx","ldy","manager","imageLoader","crossOrigin","init","loadTexture","texture","onLoad","onError","element","update","intersects","hit","preventDefault","_onDocumentMouseDown","evt","_onDocumentMouseUp","_onDocumentMouseMove","_onMouseWheel","undefined","delta","alpha","antialias","clearColor","sortObjects","fog","light","lightPosition","cameraType","cameraPosition","orthoZoom","controlSettings","minDistance","maxDistance","zoomSpeed","noZoom","sceneSettings","height","window","bind","attachTo","render","updateOrthoZoom","focusOn","fireSignal","clearSelection","onMouse","clamp","sign","random","randomInt","normalize","getShortRotation","angle","generateID","isPlainObject","merge","dst","target","src","Object","now","empty","radixSort","idxBegin","idxEnd","bit","idxOnes","mask","arr","idx","randomizeRGB","range","getJSON","uri","xhr"],"mappings":"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","sourcesContent":["var vg = { // eslint-disable-line\n\tVERSION: '0.1.1',\n\n\tPI: Math.PI,\n\tTAU: Math.PI * 2,\n\tDEG_TO_RAD: 0.0174532925,\n\tRAD_TO_DEG: 57.2957795,\n\tSQRT3: Math.sqrt(3), // used often in hex conversions\n\n\t// useful enums for type checking. change to whatever fits your game. these are just examples\n\tTILE: 'tile', // visual representation of a grid cell\n\tENT: 'entity', // dynamic things\n\tSTR: 'structure', // static things\n\n\tHEX: 'hex',\n\tSQR: 'square',\n\tABS: 'abstract'\n};","/*\n\tInterface to the grid. Holds data about the visual representation of the cells (tiles).\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.Board = function(grid, finderConfig) {\n\tif (!grid) throw new Error('You must pass in a grid system for the board to use.');\n\n\tthis.tiles = [];\n\tthis.tileGroup = null; // only for tiles\n\n\tthis.group = new THREE.Object3D(); // can hold all entities, also holds tileGroup, never trashed\n\n\tthis.grid = null;\n\tthis.overlay = null;\n\tthis.finder = new vg.AStarFinder(finderConfig);\n\t// need to keep a resource cache around, so this Loader does that, use it instead of THREE.ImageUtils\n\tvg.Loader.init();\n\n\tthis.setGrid(grid);\n};\n\nvg.Board.prototype = {\n\tsetEntityOnTile: function(entity, tile) {\n\t\t// snap an entity's position to a tile; merely copies position\n\t\tvar pos = this.grid.cellToPixel(tile.cell);\n\t\tentity.position.copy(pos);\n\t\t// adjust for any offset after the entity was set directly onto the tile\n\t\tentity.position.y += entity.heightOffset || 0;\n\t\t// remove entity from old tile\n\t\tif (entity.tile) {\n\t\t\tentity.tile.entity = null;\n\t\t}\n\t\t// set new situation\n\t\tentity.tile = tile;\n\t\ttile.entity = entity;\n\t},\n\n\taddTile: function(tile) {\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tif (i === -1) this.tiles.push(tile);\n\t\telse return;\n\n\t\tthis.snapTileToGrid(tile);\n\t\ttile.position.y = 0;\n\n\t\tthis.tileGroup.add(tile.mesh);\n\t\tthis.grid.add(tile.cell);\n\n\t\ttile.cell.tile = tile;\n\t},\n\n\tremoveTile: function(tile) {\n\t\tif (!tile) return; // was already removed somewhere\n\t\tvar i = this.tiles.indexOf(tile);\n\t\tthis.grid.remove(tile.cell);\n\n\t\tif (i !== -1) this.tiles.splice(i, 1);\n\t\t// this.tileGroup.remove(tile.mesh);\n\n\t\ttile.dispose();\n\t},\n\n\tremoveAllTiles: function() {\n\t\tif (!this.tileGroup) return;\n\t\tvar tiles = this.tileGroup.children;\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.remove(tiles[i]);\n\t\t}\n\t},\n\n\tgetTileAtCell: function(cell) {\n\t\tvar h = this.grid.cellToHash(cell);\n\t\treturn cell.tile || (typeof this.grid.cells[h] !== 'undefined' ? this.grid.cells[h].tile : null);\n\t},\n\n\tsnapToGrid: function(pos) {\n\t\tvar cell = this.grid.pixelToCell(pos);\n\t\tpos.copy(this.grid.cellToPixel(cell));\n\t},\n\n\tsnapTileToGrid: function(tile) {\n\t\tif (tile.cell) {\n\t\t\ttile.position.copy(this.grid.cellToPixel(tile.cell));\n\t\t}\n\t\telse {\n\t\t\tvar cell = this.grid.pixelToCell(tile.position);\n\t\t\ttile.position.copy(this.grid.cellToPixel(cell));\n\t\t}\n\t\treturn tile;\n\t},\n\n\tgetRandomTile: function() {\n\t\tvar i = vg.Tools.randomInt(0, this.tiles.length-1);\n\t\treturn this.tiles[i];\n\t},\n\n\tfindPath: function(startTile, endTile, heuristic) {\n\t\treturn this.finder.findPath(startTile.cell, endTile.cell, heuristic, this.grid);\n\t},\n\n\tsetGrid: function(newGrid) {\n\t\tthis.group.remove(this.tileGroup);\n\t\tif (this.grid && newGrid !== this.grid) {\n\t\t\tthis.removeAllTiles();\n\t\t\tthis.tiles.forEach(function(t) {\n\t\t\t\tthis.grid.remove(t.cell);\n\t\t\t\tt.dispose();\n\t\t\t});\n\t\t\tthis.grid.dispose();\n\t\t}\n\t\tthis.grid = newGrid;\n\t\tthis.tiles = [];\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tthis.group.add(this.tileGroup);\n\t},\n\n\tgenerateOverlay: function(size) {\n\t\tvar mat = new THREE.LineBasicMaterial({\n\t\t\tcolor: 0x000000,\n\t\t\topacity: 0.3\n\t\t});\n\n\t\tif (this.overlay) {\n\t\t\tthis.group.remove(this.overlay);\n\t\t}\n\n\t\tthis.overlay = new THREE.Object3D();\n\n\t\tthis.grid.generateOverlay(size, this.overlay, mat);\n\n\t\tthis.group.add(this.overlay);\n\t},\n\n\tgenerateTilemap: function(config) {\n\t\tthis.reset();\n\n\t\tvar tiles = this.grid.generateTiles(config);\n\t\tthis.tiles = tiles;\n\n\t\tthis.tileGroup = new THREE.Object3D();\n\t\tfor (var i = 0; i < tiles.length; i++) {\n\t\t\tthis.tileGroup.add(tiles[i].mesh);\n\t\t}\n\n\t\tthis.group.add(this.tileGroup);\n\t},\n\n\treset: function() {\n\t\t// removes all tiles from the scene, but leaves the grid intact\n\t\tthis.removeAllTiles();\n\t\tif (this.tileGroup) this.group.remove(this.tileGroup);\n\t}\n};\n\nvg.Board.prototype.constructor = vg.Board;\n","/*\n\tSimple structure for holding grid coordinates and extra data about them.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n*/\nvg.Cell = function(q, r, s, h) {\n\tthis.q = q || 0; // x grid coordinate (using different letters so that it won't be confused with pixel/world coordinates)\n\tthis.r = r || 0; // y grid coordinate\n\tthis.s = s || 0; // z grid coordinate\n\tthis.h = h || 1; // 3D height of the cell, used by visual representation and pathfinder, cannot be less than 1\n\tthis.tile = null; // optional link to the visual representation's class instance\n\tthis.userData = {}; // populate with any extra data needed in your game\n\tthis.walkable = true; // if true, pathfinder will use as a through node\n\t// rest of these are used by the pathfinder and overwritten at runtime, so don't touch\n\tthis._calcCost = 0;\n\tthis._priority = 0;\n\tthis._visited = false;\n\tthis._parent = null;\n\tthis.uniqueID = vg.LinkedList.generateID();\n};\n\nvg.Cell.prototype = {\n\tset: function(q, r, s) {\n\t\tthis.q = q;\n\t\tthis.r = r;\n\t\tthis.s = s;\n\t\treturn this;\n\t},\n\n\tcopy: function(cell) {\n\t\tthis.q = cell.q;\n\t\tthis.r = cell.r;\n\t\tthis.s = cell.s;\n\t\tthis.h = cell.h;\n\t\tthis.tile = cell.tile || null;\n\t\tthis.userData = cell.userData || {};\n\t\tthis.walkable = cell.walkable;\n\t\treturn this;\n\t},\n\n\tadd: function(cell) {\n\t\tthis.q += cell.q;\n\t\tthis.r += cell.r;\n\t\tthis.s += cell.s;\n\t\treturn this;\n\t},\n\n\tequals: function(cell) {\n\t\treturn this.q === cell.q && this.r === cell.r && this.s === cell.s;\n\t}\n};\n\nvg.Cell.prototype.constructor = vg.Cell;\n","/*\n\tGraph of hexagons. Handles grid cell management (placement math for eg pathfinding, range, etc) and grid conversion math.\n\t[Cube/axial coordinate system](http://www.redblobgames.com/grids/hexagons/), \"flat top\" version only. Since this is 3D, just rotate your camera for pointy top maps.\n\tInterface:\n\ttype\n\tsize - number of cells (in radius); only used if the map is generated\n\tcellSize\n\tcells - a hash so we can have sparse maps\n\tnumCells\n\textrudeSettings\n\tautogenerated\n\tcellShape\n\tcellGeo\n\tcellShapeGeo\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\n// 'utils/Loader', 'graphs/Hex', 'utils/Tools'\nvg.HexGrid = function(config) {\n\tconfig = config || {};\n\t/*  ______________________________________________\n\t\tGRID INTERFACE:\n\t*/\n\tthis.type = vg.HEX;\n\tthis.size = 5; // only used for generated maps\n\tthis.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n\tthis.cells = {};\n\tthis.numCells = 0;\n\n\tthis.extrudeSettings = null;\n\tthis.autogenerated = false;\n\n\t// create base shape used for building geometry\n\tvar i, verts = [];\n\t// create the skeleton of the hex\n\tfor (i = 0; i < 6; i++) {\n\t\tverts.push(this._createVertex(i));\n\t}\n\t// copy the verts into a shape for the geometry to use\n\tthis.cellShape = new THREE.Shape();\n\tthis.cellShape.moveTo(verts[0].x, verts[0].y);\n\tfor (i = 1; i < 6; i++) {\n\t\tthis.cellShape.lineTo(verts[i].x, verts[i].y);\n\t}\n\tthis.cellShape.lineTo(verts[0].x, verts[0].y);\n\tthis.cellShape.autoClose = true;\n\n\tthis.cellGeo = new THREE.Geometry();\n\tthis.cellGeo.vertices = verts;\n\tthis.cellGeo.verticesNeedUpdate = true;\n\n\tthis.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n\t/*  ______________________________________________\n\t\tPRIVATE\n\t*/\n\n\tthis._cellWidth = this.cellSize * 2;\n\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\tthis._hashDelimeter = '.';\n\t// pre-computed permutations\n\tthis._directions = [new vg.Cell(+1, -1, 0), new vg.Cell(+1, 0, -1), new vg.Cell(0, +1, -1),\n\t\t\t\t\t\tnew vg.Cell(-1, +1, 0), new vg.Cell(-1, 0, +1), new vg.Cell(0, -1, +1)];\n\tthis._diagonals = [new vg.Cell(+2, -1, -1), new vg.Cell(+1, +1, -2), new vg.Cell(-1, +2, -1),\n\t\t\t\t\t   new vg.Cell(-2, +1, +1), new vg.Cell(-1, -1, +2), new vg.Cell(+1, -2, +1)];\n\t// cached objects\n\tthis._list = [];\n\tthis._vec3 = new THREE.Vector3();\n\tthis._cel = new vg.Cell();\n\tthis._conversionVec = new THREE.Vector3();\n\tthis._geoCache = [];\n\tthis._matCache = [];\n};\n\nvg.HexGrid.TWO_THIRDS = 2 / 3;\n\nvg.HexGrid.prototype = {\n\t/*  ________________________________________________________________________\n\t\tHigh-level functions that the Board interfaces with (all grids implement)\n\t */\n\n\t// grid cell (Hex in cube coordinate space) to position in pixels/world\n\tcellToPixel: function(cell) {\n\t\tthis._vec3.x = cell.q * this._cellWidth * 0.75;\n\t\tthis._vec3.y = cell.h;\n\t\tthis._vec3.z = -((cell.s - cell.r) * this._cellLength * 0.5);\n\t\treturn this._vec3;\n\t},\n\n\tpixelToCell: function(pos) {\n\t\t// convert a position in world space (\"pixels\") to cell coordinates\n\t\tvar q = pos.x * (vg.HexGrid.TWO_THIRDS / this.cellSize);\n\t\tvar r = ((-pos.x / 3) + (vg.SQRT3/3) * pos.z) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\treturn this._cubeRound(this._cel);\n\t},\n\n\tgetCellAt: function(pos) {\n\t\t// get the Cell (if any) at the passed world position\n\t\tvar q = pos.x * (vg.HexGrid.TWO_THIRDS / this.cellSize);\n\t\tvar r = ((-pos.x / 3) + (vg.SQRT3/3) * pos.z) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\tthis._cubeRound(this._cel);\n\t\treturn this.cells[this.cellToHash(this._cel)];\n\t},\n\n\tgetNeighbors: function(cell, diagonal, filter) {\n\t\t// always returns an array\n\t\tvar i, n, l = this._directions.length;\n\t\tthis._list.length = 0;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis._cel.copy(cell);\n\t\t\tthis._cel.add(this._directions[i]);\n\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._list.push(n);\n\t\t}\n\t\tif (diagonal) {\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis._cel.copy(cell);\n\t\t\t\tthis._cel.add(this._diagonals[i]);\n\t\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._list.push(n);\n\t\t\t}\n\t\t}\n\t\treturn this._list;\n\t},\n\n\tgetRandomCell: function() {\n\t\tvar c, i = 0, x = vg.Tools.randomInt(0, this.numCells);\n\t\tfor (c in this.cells) {\n\t\t\tif (i === x) {\n\t\t\t\treturn this.cells[c];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn this.cells[c];\n\t},\n\n\tcellToHash: function(cell) {\n\t\treturn cell.q+this._hashDelimeter+cell.r+this._hashDelimeter+cell.s;\n\t},\n\n\tdistance: function(cellA, cellB) {\n\t\tvar d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r), Math.abs(cellA.s - cellB.s));\n\t\td += cellB.h - cellA.h; // include vertical height\n\t\treturn d;\n\t},\n\n\tclearPath: function() {\n\t\tvar i, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tc._calcCost = 0;\n\t\t\tc._priority = 0;\n\t\t\tc._parent = null;\n\t\t\tc._visited = false;\n\t\t}\n\t},\n\n\ttraverse: function(cb) {\n\t\tvar i;\n\t\tfor (i in this.cells) {\n\t\t\tcb(this.cells[i]);\n\t\t}\n\t},\n\n\tgenerateTile: function(cell, scale, material) {\n\t\tvar height = Math.abs(cell.h);\n\t\tif (height < 1) height = 1;\n\n\t\tvar geo = this._geoCache[height];\n\t\tif (!geo) {\n\t\t\tthis.extrudeSettings.amount = height;\n\t\t\tgeo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n\t\t\tthis._geoCache[height] = geo;\n\t\t}\n\n\t\t/*mat = this._matCache[c.matConfig.mat_cache_id];\n\t\tif (!mat) { // MaterialLoader? we currently only support basic stuff though. maybe later\n\t\t\tmat.map = Loader.loadTexture(c.matConfig.imgURL);\n\t\t\tdelete c.matConfig.imgURL;\n\t\t\tmat = new THREE[c.matConfig.type](c.matConfig);\n\t\t\tthis._matCache[c.matConfig.mat_cache_id] = mat;\n\t\t}*/\n\n\t\tvar tile = new vg.Tile({\n\t\t\tsize: this.cellSize,\n\t\t\tscale: scale,\n\t\t\tcell: cell,\n\t\t\tgeometry: geo,\n\t\t\tmaterial: material\n\t\t});\n\n\t\tcell.tile = tile;\n\n\t\treturn tile;\n\t},\n\n\tgenerateTiles: function(config) {\n\t\tconfig = config || {};\n\t\tvar tiles = [];\n\t\tvar settings = {\n\t\t\ttileScale: 0.95,\n\t\t\tcellSize: this.cellSize,\n\t\t\tmaterial: null,\n\t\t\textrudeSettings: {\n\t\t\t\tamount: 1,\n\t\t\t\tbevelEnabled: true,\n\t\t\t\tbevelSegments: 1,\n\t\t\t\tsteps: 1,\n\t\t\t\tbevelSize: 0.5,\n\t\t\t\tbevelThickness: 0.5\n\t\t\t}\n\t\t}\n\t\tsettings = vg.Tools.merge(settings, config);\n\n\t\t/*if (!settings.material) {\n\t\t\tsettings.material = new THREE.MeshPhongMaterial({\n\t\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 10)\n\t\t\t});\n\t\t}*/\n\n\t\t// overwrite with any new dimensions\n\t\tthis.cellSize = settings.cellSize;\n\t\tthis._cellWidth = this.cellSize * 2;\n\t\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\n\t\tthis.autogenerated = true;\n\t\tthis.extrudeSettings = settings.extrudeSettings;\n\n\t\tvar i, t, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tt = this.generateTile(c, settings.tileScale, settings.material);\n\t\t\tt.position.copy(this.cellToPixel(c));\n\t\t\tt.position.y = 0;\n\t\t\ttiles.push(t);\n\t\t}\n\t\treturn tiles;\n\t},\n\n\tgenerateTilePoly: function(material) {\n\t\tif (!material) {\n\t\t\tmaterial = new THREE.MeshBasicMaterial({color: 0x24b4ff});\n\t\t}\n\t\tvar mesh = new THREE.Mesh(this.cellShapeGeo, material);\n\t\tthis._vec3.set(1, 0, 0);\n\t\tmesh.rotateOnAxis(this._vec3, vg.PI/2);\n\t\treturn mesh;\n\t},\n\n\t// create a flat, hexagon-shaped grid\n\tgenerate: function(config) {\n\t\tconfig = config || {};\n\t\tthis.size = typeof config.size === 'undefined' ? this.size : config.size;\n\t\tvar x, y, z, c;\n\t\tfor (x = -this.size; x < this.size+1; x++) {\n\t\t\tfor (y = -this.size; y < this.size+1; y++) {\n\t\t\t\tz = -x-y;\n\t\t\t\tif (Math.abs(x) <= this.size && Math.abs(y) <= this.size && Math.abs(z) <= this.size) {\n\t\t\t\t\tc = new vg.Cell(x, y, z);\n\t\t\t\t\tthis.add(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerateOverlay: function(size, overlayObj, overlayMat) {\n\t\tvar x, y, z;\n\t\tvar geo = this.cellShape.createPointsGeometry();\n\t\tfor (x = -size; x < size+1; x++) {\n\t\t\tfor (y = -size; y < size+1; y++) {\n\t\t\t\tz = -x-y;\n\t\t\t\tif (Math.abs(x) <= size && Math.abs(y) <= size && Math.abs(z) <= size) {\n\t\t\t\t\tthis._cel.set(x, y, z); // define the cell\n\t\t\t\t\tvar line = new THREE.Line(geo, overlayMat);\n\t\t\t\t\tline.position.copy(this.cellToPixel(this._cel));\n\t\t\t\t\tline.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t\t\toverlayObj.add(line);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tadd: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\t// console.warn('A cell already exists there');\n\t\t\treturn;\n\t\t}\n\t\tthis.cells[h] = cell;\n\t\tthis.numCells++;\n\n\t\treturn cell;\n\t},\n\n\tremove: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\tdelete this.cells[h];\n\t\t\tthis.numCells--;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.cells = null;\n\t\tthis.numCells = 0;\n\t\tthis.cellShape = null;\n\t\tthis.cellGeo.dispose();\n\t\tthis.cellGeo = null;\n\t\tthis.cellShapeGeo.dispose();\n\t\tthis.cellShapeGeo = null;\n\t\tthis._list = null;\n\t\tthis._vec3 = null;\n\t\tthis._conversionVec = null;\n\t\tthis._geoCache = null;\n\t\tthis._matCache = null;\n\t},\n\n\t/*\n\t\tLoad a grid from a parsed json object.\n\t\tjson = {\n\t\t\textrudeSettings,\n\t\t\tsize,\n\t\t\tcellSize,\n\t\t\tautogenerated,\n\t\t\tcells: [],\n\t\t\tmaterials: [\n\t\t\t\t{\n\t\t\t\t\tcache_id: 0,\n\t\t\t\t\ttype: 'MeshLambertMaterial',\n\t\t\t\t\tcolor, ambient, emissive, reflectivity, refractionRatio, wrapAround,\n\t\t\t\t\timgURL: url\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcacheId: 1, ...\n\t\t\t\t}\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t*/\n\tload: function(url, cb, scope) {\n\t\tvar self = this;\n\t\tvg.Tools.getJSON({\n\t\t\turl: url,\n\t\t\tcallback: function(json) {\n\t\t\t\tself.fromJSON(json);\n\t\t\t\tcb.call(scope || null, json);\n\t\t\t},\n\t\t\tcache: false,\n\t\t\tscope: self\n\t\t});\n\t},\n\n\tfromJSON: function(json) {\n\t\tvar i, c;\n\t\tvar cells = json.cells;\n\n\t\tthis.cells = {};\n\t\tthis.numCells = 0;\n\n\t\tthis.size = json.size;\n\t\tthis.cellSize = json.cellSize;\n\t\tthis._cellWidth = this.cellSize * 2;\n\t\tthis._cellLength = (vg.SQRT3 * 0.5) * this._cellWidth;\n\n\t\tthis.extrudeSettings = json.extrudeSettings;\n\t\tthis.autogenerated = json.autogenerated;\n\n\t\tfor (i = 0; i < cells.length; i++) {\n\t\t\tc = new vg.Cell();\n\t\t\tc.copy(cells[i]);\n\t\t\tthis.add(c);\n\t\t}\n\t},\n\n\ttoJSON: function() {\n\t\tvar json = {\n\t\t\tsize: this.size,\n\t\t\tcellSize: this.cellSize,\n\t\t\textrudeSettings: this.extrudeSettings,\n\t\t\tautogenerated: this.autogenerated\n\t\t};\n\t\tvar cells = [];\n\t\tvar c, k;\n\n\t\tfor (k in this.cells) {\n\t\t\tc = this.cells[k];\n\t\t\tcells.push({\n\t\t\t\tq: c.q,\n\t\t\t\tr: c.r,\n\t\t\t\ts: c.s,\n\t\t\t\th: c.h,\n\t\t\t\twalkable: c.walkable,\n\t\t\t\tuserData: c.userData\n\t\t\t});\n\t\t}\n\t\tjson.cells = cells;\n\n\t\treturn json;\n\t},\n\n\t/*  ________________________________________________________________________\n\t\tHexagon-specific conversion math\n\t\tMostly commented out because they're inlined whenever possible to increase performance.\n\t\tThey're still here for reference.\n\t */\n\n\t_createVertex: function(i) {\n\t\tvar angle = (vg.TAU / 6) * i;\n\t\treturn new THREE.Vector3((this.cellSize * Math.cos(angle)), (this.cellSize * Math.sin(angle)), 0);\n\t},\n\n\t/*_pixelToAxial: function(pos) {\n\t\tvar q, r; // = x, y\n\t\tq = pos.x * ((2/3) / this.cellSize);\n\t\tr = ((-pos.x / 3) + (vg.SQRT3/3) * pos.y) / this.cellSize;\n\t\tthis._cel.set(q, r, -q-r);\n\t\treturn this._cubeRound(this._cel);\n\t},*/\n\n\t/*_axialToCube: function(h) {\n\t\treturn {\n\t\t\tq: h.q,\n\t\t\tr: h.r,\n\t\t\ts: -h.q - h.r\n\t\t};\n\t},*/\n\n\t/*_cubeToAxial: function(cell) {\n\t\treturn cell; // yep\n\t},*/\n\n\t/*_axialToPixel: function(cell) {\n\t\tvar x, y; // = q, r\n\t\tx = cell.q * this._cellWidth * 0.75;\n\t\ty = (cell.s - cell.r) * this._cellLength * 0.5;\n\t\treturn {x: x, y: -y};\n\t},*/\n\n\t/*_hexToPixel: function(h) {\n\t\tvar x, y; // = q, r\n\t\tx = this.cellSize * 1.5 * h.x;\n\t\ty = this.cellSize * vg.SQRT3 * (h.y + (h.x * 0.5));\n\t\treturn {x: x, y: y};\n\t},*/\n\n\t/*_axialRound: function(h) {\n\t\treturn this._cubeRound(this.axialToCube(h));\n\t},*/\n\n\t_cubeRound: function(h) {\n\t\tvar rx = Math.round(h.q);\n\t\tvar ry = Math.round(h.r);\n\t\tvar rz = Math.round(h.s);\n\n\t\tvar xDiff = Math.abs(rx - h.q);\n\t\tvar yDiff = Math.abs(ry - h.r);\n\t\tvar zDiff = Math.abs(rz - h.s);\n\n\t\tif (xDiff > yDiff && xDiff > zDiff) {\n\t\t\trx = -ry-rz;\n\t\t}\n\t\telse if (yDiff > zDiff) {\n\t\t\try = -rx-rz;\n\t\t}\n\t\telse {\n\t\t\trz = -rx-ry;\n\t\t}\n\n\t\treturn this._cel.set(rx, ry, rz);\n\t},\n\n\t/*_cubeDistance: function(a, b) {\n\t\treturn Math.max(Math.abs(a.q - b.q), Math.abs(a.r - b.r), Math.abs(a.s - b.s));\n\t}*/\n};\n\nvg.HexGrid.prototype.constructor = vg.HexGrid;\n","/*\n\tGraph of squares. Handles grid cell management (placement math for eg pathfinding, range, etc) and grid conversion math.\n\tInterface:\n\ttype\n\tsize - number of cells (in radius); only used if the map is generated\n\tcellSize\n\tcells - a hash so we can have sparse maps\n\tnumCells\n\textrudeSettings\n\tautogenerated\n\tcellShape\n\tcellGeo\n\tcellShapeGeo\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.SqrGrid = function(config) {\n\tconfig = config || {};\n\t/*  ______________________________________________\n\t\tGRID INTERFACE:\n\t*/\n\tthis.type = vg.SQR;\n\tthis.size = 5; // only used for generated maps\n\tthis.cellSize = typeof config.cellSize === 'undefined' ? 10 : config.cellSize;\n\tthis.cells = {};\n\tthis.numCells = 0;\n\n\tthis.extrudeSettings = null;\n\tthis.autogenerated = false;\n\n\t// create base shape used for building geometry\n\tvar verts = [];\n\tverts.push(new THREE.Vector3());\n\tverts.push(new THREE.Vector3(-this.cellSize, this.cellSize));\n\tverts.push(new THREE.Vector3(this.cellSize, this.cellSize));\n\tverts.push(new THREE.Vector3(this.cellSize, -this.cellSize));\n\t// copy the verts into a shape for the geometry to use\n\tthis.cellShape = new THREE.Shape();\n\tthis.cellShape.moveTo(-this.cellSize, -this.cellSize);\n\tthis.cellShape.lineTo(-this.cellSize, this.cellSize);\n\tthis.cellShape.lineTo(this.cellSize, this.cellSize);\n\tthis.cellShape.lineTo(this.cellSize, -this.cellSize);\n\tthis.cellShape.lineTo(-this.cellSize, -this.cellSize);\n\n\tthis.cellGeo = new THREE.Geometry();\n\tthis.cellGeo.vertices = verts;\n\tthis.cellGeo.verticesNeedUpdate = true;\n\n\tthis.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape);\n\n\t/*  ______________________________________________\n\t\tPRIVATE\n\t*/\n\n\tthis._fullCellSize = this.cellSize * 2;\n\tthis._hashDelimeter = '.';\n\t// pre-computed permutations\n\tthis._directions = [new vg.Cell(+1, 0, 0), new vg.Cell(0, -1, 0),\n\t\t\t\t\t\tnew vg.Cell(-1, 0, 0), new vg.Cell(0, +1, 0)];\n\tthis._diagonals = [new vg.Cell(-1, -1, 0), new vg.Cell(-1, +1, 0),\n\t\t\t\t\t   new vg.Cell(+1, +1, 0), new vg.Cell(+1, -1, 0)];\n\t// cached objects\n\tthis._list = [];\n\tthis._vec3 = new THREE.Vector3();\n\tthis._cel = new vg.Cell();\n\tthis._conversionVec = new THREE.Vector3();\n\tthis._geoCache = [];\n\tthis._matCache = [];\n};\n\nvg.SqrGrid.prototype = {\n\t/*\n\t\t________________________________________________________________________\n\t\tHigh-level functions that the Board interfaces with (all grids implement)\n\t */\n\n\tcellToPixel: function(cell) {\n\t\tthis._vec3.x = cell.q * this._fullCellSize;\n\t\tthis._vec3.y = cell.h;\n\t\tthis._vec3.z = cell.r * this._fullCellSize;\n\t\treturn this._vec3;\n\t},\n\n\tpixelToCell: function(pos) {\n\t\tvar q = Math.round(pos.x / this._fullCellSize);\n\t\tvar r = Math.round(pos.z / this._fullCellSize);\n\t\treturn this._cel.set(q, r, 0);\n\t},\n\n\tgetCellAt: function(pos) {\n\t\tvar q = Math.round(pos.x / this._fullCellSize);\n\t\tvar r = Math.round(pos.z / this._fullCellSize);\n\t\tthis._cel.set(q, r);\n\t\treturn this.cells[this.cellToHash(this._cel)];\n\t},\n\n\tgetNeighbors: function(cell, diagonal, filter) {\n\t\t// always returns an array\n\t\tvar i, n, l = this._directions.length;\n\t\tthis._list.length = 0;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis._cel.copy(cell);\n\t\t\tthis._cel.add(this._directions[i]);\n\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._list.push(n);\n\t\t}\n\t\tif (diagonal) {\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis._cel.copy(cell);\n\t\t\t\tthis._cel.add(this._diagonals[i]);\n\t\t\t\tn = this.cells[this.cellToHash(this._cel)];\n\t\t\t\tif (!n || (filter && !filter(cell, n))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._list.push(n);\n\t\t\t}\n\t\t}\n\t\treturn this._list;\n\t},\n\n\tgetRandomCell: function() {\n\t\tvar c, i = 0, x = vg.Tools.randomInt(0, this.numCells);\n\t\tfor (c in this.cells) {\n\t\t\tif (i === x) {\n\t\t\t\treturn this.cells[c];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn this.cells[c];\n\t},\n\n\tcellToHash: function(cell) {\n\t\treturn cell.q+this._hashDelimeter+cell.r; // s is not used in a square grid\n\t},\n\n\tdistance: function(cellA, cellB) {\n\t\tvar d = Math.max(Math.abs(cellA.q - cellB.q), Math.abs(cellA.r - cellB.r));\n\t\td += cellB.h - cellA.h; // include vertical size\n\t\treturn d;\n\t},\n\n\tclearPath: function() {\n\t\tvar i, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tc._calcCost = 0;\n\t\t\tc._priority = 0;\n\t\t\tc._parent = null;\n\t\t\tc._visited = false;\n\t\t}\n\t},\n\n\ttraverse: function(cb) {\n\t\tvar i;\n\t\tfor (i in this.cells) {\n\t\t\tcb(this.cells[i]);\n\t\t}\n\t},\n\n\tgenerateTile: function(cell, scale, material) {\n\t\tvar height = Math.abs(cell.h);\n\t\tif (height < 1) height = 1;\n\n\t\tvar geo = this._geoCache[height];\n\t\tif (!geo) {\n\t\t\tthis.extrudeSettings.amount = height;\n\t\t\tgeo = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings);\n\t\t\tthis._geoCache[height] = geo;\n\t\t}\n\n\t\t/*mat = this._matCache[c.matConfig.mat_cache_id];\n\t\tif (!mat) { // MaterialLoader? we currently only support basic stuff though. maybe later\n\t\t\tmat.map = Loader.loadTexture(c.matConfig.imgURL);\n\t\t\tdelete c.matConfig.imgURL;\n\t\t\tmat = new THREE[c.matConfig.type](c.matConfig);\n\t\t\tthis._matCache[c.matConfig.mat_cache_id] = mat;\n\t\t}*/\n\n\t\tvar t = new vg.Tile({\n\t\t\tsize: this.cellSize,\n\t\t\tscale: scale,\n\t\t\tcell: cell,\n\t\t\tgeometry: geo,\n\t\t\tmaterial: material\n\t\t});\n\n\t\tcell.tile = t;\n\n\t\treturn t;\n\t},\n\n\tgenerateTiles: function(config) {\n\t\tconfig = config || {};\n\t\tvar tiles = [];\n\t\tvar settings = {\n\t\t\ttileScale: 0.95,\n\t\t\tcellSize: this.cellSize,\n\t\t\tmaterial: null,\n\t\t\textrudeSettings: {\n\t\t\t\tamount: 1,\n\t\t\t\tbevelEnabled: true,\n\t\t\t\tbevelSegments: 1,\n\t\t\t\tsteps: 1,\n\t\t\t\tbevelSize: 0.5,\n\t\t\t\tbevelThickness: 0.5\n\t\t\t}\n\t\t}\n\t\tsettings = vg.Tools.merge(settings, config);\n\n\t\t/*if (!settings.material) {\n\t\t\tsettings.material = new THREE.MeshPhongMaterial({\n\t\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 10)\n\t\t\t});\n\t\t}*/\n\n\t\t// overwrite with any new dimensions\n\t\tthis.cellSize = settings.cellSize;\n\t\tthis._fullCellSize = this.cellSize * 2;\n\n\t\tthis.autogenerated = true;\n\t\tthis.extrudeSettings = settings.extrudeSettings;\n\n\t\tvar i, t, c;\n\t\tfor (i in this.cells) {\n\t\t\tc = this.cells[i];\n\t\t\tt = this.generateTile(c, settings.tileScale, settings.material);\n\t\t\tt.position.copy(this.cellToPixel(c));\n\t\t\tt.position.y = 0;\n\t\t\ttiles.push(t);\n\t\t}\n\t\treturn tiles;\n\t},\n\n\tgenerateTilePoly: function(material) {\n\t\tif (!material) {\n\t\t\tmaterial = new THREE.MeshBasicMaterial({color: 0x24b4ff});\n\t\t}\n\t\tvar mesh = new THREE.Mesh(this.cellShapeGeo, material);\n\t\tthis._vec3.set(1, 0, 0);\n\t\tmesh.rotateOnAxis(this._vec3, vg.PI/2);\n\t\treturn mesh;\n\t},\n\n\t// create a flat, square-shaped grid\n\tgenerate: function(config) {\n\t\tconfig = config || {};\n\t\tthis.size = typeof config.size === 'undefined' ? this.size : config.size;\n\t\tvar x, y, c;\n\t\tvar half = Math.ceil(this.size / 2);\n\t\tfor (x = -half; x < half; x++) {\n\t\t\tfor (y = -half; y < half; y++) {\n\t\t\t\tc = new vg.Cell(x, y + 1);\n\t\t\t\tthis.add(c);\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerateOverlay: function(size, overlayObj, overlayMat) {\n\t\tvar x, y;\n\t\tvar half = Math.ceil(size / 2);\n\t\tfor (x = -half; x < half; x++) {\n\t\t\tfor (y = -half; y < half; y++) {\n\t\t\t\tthis._cel.set(x, y); // define the cell\n\t\t\t\tvar line = new THREE.Line(this.cellGeo, overlayMat);\n\t\t\t\tline.position.copy(this.cellToPixel(this._cel));\n\t\t\t\tline.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t\toverlayObj.add(line);\n\t\t\t}\n\t\t}\n\t},\n\n\tadd: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\t// console.warn('A cell already exists there');\n\t\t\treturn;\n\t\t}\n\t\tthis.cells[h] = cell;\n\t\tthis.numCells++;\n\n\t\treturn cell;\n\t},\n\n\tremove: function(cell) {\n\t\tvar h = this.cellToHash(cell);\n\t\tif (this.cells[h]) {\n\t\t\tdelete this.cells[h];\n\t\t\tthis.numCells--;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.cells = null;\n\t\tthis.numCells = 0;\n\t\tthis.cellShape = null;\n\t\tthis.cellGeo.dispose();\n\t\tthis.cellGeo = null;\n\t\tthis.cellShapeGeo.dispose();\n\t\tthis.cellShapeGeo = null;\n\t\tthis._list = null;\n\t\tthis._vec3 = null;\n\t\tthis._conversionVec = null;\n\t\tthis._geoCache = null;\n\t\tthis._matCache = null;\n\t},\n\n\t/*\n\t\tLoad a grid from a parsed json object.\n\t\tjson = {\n\t\t\textrudeSettings,\n\t\t\tsize,\n\t\t\tcellSize,\n\t\t\tautogenerated,\n\t\t\tcells: [],\n\t\t\tmaterials: [\n\t\t\t\t{\n\t\t\t\t\tcache_id: 0,\n\t\t\t\t\ttype: 'MeshLambertMaterial',\n\t\t\t\t\tcolor, ambient, emissive, reflectivity, refractionRatio, wrapAround,\n\t\t\t\t\timgURL: url\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcacheId: 1, ...\n\t\t\t\t}\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t*/\n\tload: function(url, callback, scope) {\n\t\tvg.Tools.getJSON({\n\t\t\turl: url,\n\t\t\tcallback: function(json) {\n\t\t\t\tthis.fromJSON(json);\n\t\t\t\tcallback.call(scope || null, json);\n\t\t\t},\n\t\t\tcache: false,\n\t\t\tscope: this\n\t\t});\n\t},\n\n\tfromJSON: function(json) {\n\t\tvar i, c;\n\t\tvar cells = json.cells;\n\n\t\tthis.cells = {};\n\t\tthis.numCells = 0;\n\n\t\tthis.size = json.size;\n\t\tthis.cellSize = json.cellSize;\n\t\tthis._fullCellSize = this.cellSize * 2;\n\t\tthis.extrudeSettings = json.extrudeSettings;\n\t\tthis.autogenerated = json.autogenerated;\n\n\t\tfor (i = 0; i < cells.length; i++) {\n\t\t\tc = new vg.Cell();\n\t\t\tc.copy(cells[i]);\n\t\t\tthis.add(c);\n\t\t}\n\t},\n\n\ttoJSON: function() {\n\t\tvar json = {\n\t\t\tsize: this.size,\n\t\t\tcellSize: this.cellSize,\n\t\t\textrudeSettings: this.extrudeSettings,\n\t\t\tautogenerated: this.autogenerated\n\t\t};\n\t\tvar cells = [];\n\t\tvar c, k;\n\n\t\tfor (k in this.cells) {\n\t\t\tc = this.cells[k];\n\t\t\tcells.push({\n\t\t\t\tq: c.q,\n\t\t\t\tr: c.r,\n\t\t\t\ts: c.s,\n\t\t\t\th: c.h,\n\t\t\t\twalkable: c.walkable,\n\t\t\t\tuserData: c.userData\n\t\t\t});\n\t\t}\n\t\tjson.cells = cells;\n\n\t\treturn json;\n\t}\n};\n\nvg.SqrGrid.prototype.constructor = vg.SqrGrid;\n","/*\n\tExample tile class that constructs its geometry for rendering and holds some gameplay properties.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n*/\nvg.Tile = function(config) {\n\tconfig = config || {};\n\tvar settings = {\n\t\tcell: null, // required vg.Cell\n\t\tgeometry: null, // required threejs geometry\n\t\tmaterial: null // not required but it would improve performance significantly\n\t};\n\tsettings = vg.Tools.merge(settings, config);\n\n\tif (!settings.cell || !settings.geometry) {\n\t\tthrow new Error('Missing vg.Tile configuration');\n\t}\n\n\tthis.cell = settings.cell;\n\tif (this.cell.tile && this.cell.tile !== this) this.cell.tile.dispose(); // remove whatever was there\n\tthis.cell.tile = this;\n\n\tthis.uniqueID = vg.Tools.generateID();\n\n\tthis.geometry = settings.geometry;\n\tthis.material = settings.material;\n\tif (!this.material) {\n\t\tthis.material = new THREE.MeshPhongMaterial({\n\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 13)\n\t\t});\n\t}\n\n\tthis.objectType = vg.TILE;\n\tthis.entity = null;\n\tthis.userData = {};\n\n\tthis.selected = false;\n\tthis.highlight = '0x0084cc';\n\n\tthis.mesh = new THREE.Mesh(this.geometry, this.material);\n\tthis.mesh.userData.structure = this;\n\n\t// create references so we can control orientation through this (Tile), instead of drilling down\n\tthis.position = this.mesh.position;\n\tthis.rotation = this.mesh.rotation;\n\n\t// rotate it to face \"up\" (the threejs coordinate space is Y+)\n\tthis.rotation.x = -90 * vg.DEG_TO_RAD;\n\tthis.mesh.scale.set(settings.scale, settings.scale, 1);\n\n\tif (this.material.emissive) {\n\t\tthis._emissive = this.material.emissive.getHex();\n\t}\n\telse {\n\t\tthis._emissive = null;\n\t}\n};\n\nvg.Tile.prototype = {\n\tselect: function() {\n\t\tif (this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this.highlight);\n\t\t}\n\t\tthis.selected = true;\n\t\treturn this;\n\t},\n\n\tdeselect: function() {\n\t\tif (this._emissive !== null && this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this._emissive);\n\t\t}\n\t\tthis.selected = false;\n\t\treturn this;\n\t},\n\n\ttoggle: function() {\n\t\tif (this.selected) {\n\t\t\tthis.deselect();\n\t\t}\n\t\telse {\n\t\t\tthis.select();\n\t\t}\n\t\treturn this;\n\t},\n\n\tdispose: function() {\n\t\tif (this.cell && this.cell.tile) this.cell.tile = null;\n\t\tthis.cell = null;\n\t\tthis.position = null;\n\t\tthis.rotation = null;\n\t\tif (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n\t\tthis.mesh.userData.structure = null;\n\t\tthis.mesh = null;\n\t\tthis.material = null;\n\t\tthis.userData = null;\n\t\tthis.entity = null;\n\t\tthis.geometry = null;\n\t\tthis._emissive = null;\n\t}\n};\n\nvg.Tile.prototype.constructor = vg.Tile;\n","/*\n\tA high-speed doubly-linked list of objects. Note that for speed reasons (using a dictionary lookup of\n\tcached nodes) there can only be a single instance of an object in the list at the same time. Adding the same\n\tobject a second time will result in a silent return from the add method.\n\n\tIn order to keep a track of node links, an object must be able to identify itself with a uniqueID function.\n\n\tTo add an item use:\n\t<pre><code>\n\t\tlist.add(newItem);\n\t</code></pre>\n\t<p>\n\tYou can iterate using the first and next members, such as:\n\t<pre><code>\n\t\tvar node = list.first;\n\t\twhile (node)\n\t\t{\n\t\t\tnode.object().DOSOMETHING();\n\t\t\tnode = node.next();\n\t\t}\n\t</code></pre>\n */\n(function() {\n\tvar LinkedListNode = function() {\n\t\tthis.obj = null;\n\t\tthis.next = null;\n\t\tthis.prev = null;\n\t\tthis.free = true;\n\t};\n\n\tvar LinkedList = function() {\n\t\tthis.first = null;\n\t\tthis.last = null;\n\t\tthis.length = 0;\n\t\tthis.objToNodeMap = {}; // a quick lookup list to map linked list nodes to objects\n\t\tthis.uniqueID = Date.now() + '' + Math.floor(Math.random()*1000);\n\n\t\tthis.sortArray = [];\n\t};\n\n\t// static function for utility\n\tLinkedList.generateID = function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t};\n\n\tLinkedList.prototype = {\n\t\t/*\n\t\t\tGet the LinkedListNode for this object.\n\t\t\t@param obj The object to get the node for\n\t\t */\n\t\tgetNode: function(obj) {\n\t\t\t// objects added to a list must implement a uniqueID which returns a unique object identifier string\n\t\t\treturn this.objToNodeMap[obj.uniqueID];\n\t\t},\n\n\t\t/*\n\t\t\tAdds a new node to the list -- typically only used internally unless you're doing something funky\n\t\t\tUse add() to add an object to the list, not this.\n\t\t */\n\t\taddNode: function(obj) {\n\t\t\tvar node = new LinkedListNode();\n\t\t\tif (!obj.uniqueID) {\n\t\t\t\ttry {\n\t\t\t\t\tobj.uniqueID = LinkedList.generateID();\n\t\t\t\t\t// console.log('New ID: '+obj.uniqueID);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tconsole.error('[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier');\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnode.obj = obj;\n\t\t\tnode.free = false;\n\t\t\tthis.objToNodeMap[obj.uniqueID] = node;\n\t\t\treturn node;\n\t\t},\n\n\t\tswapObjects: function(node, newObj) {\n\t\t\tthis.objToNodeMap[node.obj.uniqueID] = null;\n\t\t\tthis.objToNodeMap[newObj.uniqueID] = node;\n\t\t\tnode.obj = newObj;\n\t\t},\n\n\t\t/*\n\t\t\tAdd an item to the list\n\t\t\t@param obj The object to add\n\t\t */\n\t\tadd: function(obj) {\n\t\t\tvar node = this.objToNodeMap[obj.uniqueID];\n\n\t\t\tif (!node) {\n\t\t\t\tnode = this.addNode(obj);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (node.free === false) return;\n\n\t\t\t\t// reusing a node, so we clean it up\n\t\t\t\t// this caching of node/object pairs is the reason an object can only exist\n\t\t\t\t// once in a list -- which also makes things faster (not always creating new node\n\t\t\t\t// object every time objects are moving on and off the list\n\t\t\t\tnode.obj = obj;\n\t\t\t\tnode.free = false;\n\t\t\t\tnode.next = null;\n\t\t\t\tnode.prev = null;\n\t\t\t}\n\n\t\t\t// append this obj to the end of the list\n\t\t\tif (!this.first) { // is this the first?\n\t\t\t\tthis.first = node;\n\t\t\t\tthis.last = node;\n\t\t\t\tnode.next = null; // clear just in case\n\t\t\t\tnode.prev = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!this.last) {\n\t\t\t\t\tthrow new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n\t\t\t\t}\n\n\t\t\t\t// add this entry to the end of the list\n\t\t\t\tthis.last.next = node; // current end of list points to the new end\n\t\t\t\tnode.prev = this.last;\n\t\t\t\tthis.last = node;            // new object to add becomes last in the list\n\t\t\t\tnode.next = null;      // just in case this was previously set\n\t\t\t}\n\t\t\tthis.length++;\n\n\t\t\tif (this.showDebug) this.dump('after add');\n\t\t},\n\n\t\thas: function(obj) {\n\t\t\treturn !!this.objToNodeMap[obj.uniqueID];\n\t\t},\n\n\t\t/*\n\t\t\tMoves this item upwards in the list\n\t\t\t@param obj\n\t\t */\n\t\tmoveUp: function(obj) {\n\t\t\tthis.dump('before move up');\n\t\t\tvar c = this.getNode(obj);\n\t\t\tif (!c) throw \"Oops, trying to move an object that isn't in the list\";\n\t\t\tif (!c.prev) return; // already first, ignore\n\n\t\t\t// This operation makes C swap places with B:\n\t\t\t// A <-> B <-> C <-> D\n\t\t\t// A <-> C <-> B <-> D\n\n\t\t\tvar b = c.prev;\n\t\t\tvar a = b.prev;\n\n\t\t\t// fix last\n\t\t\tif (c == this.last) this.last = b;\n\n\t\t\tvar oldCNext = c.next;\n\n\t\t\tif (a) a.next = c;\n\t\t\tc.next = b;\n\t\t\tc.prev = b.prev;\n\n\t\t\tb.next = oldCNext;\n\t\t\tb.prev = c;\n\n\t\t\t// check to see if we are now first\n\t\t\tif (this.first == b) this.first = c;\n\t\t},\n\n\t\t/*\n\t\t\tMoves this item downwards in the list\n\t\t\t@param obj\n\t\t */\n\t\tmoveDown: function(obj) {\n\t\t\tvar b = this.getNode(obj);\n\t\t\tif (!b) throw \"Oops, trying to move an object that isn't in the list\";\n\t\t\tif (!b.next) return; // already last, ignore\n\n\t\t\t// This operation makes B swap places with C:\n\t\t\t// A <-> B <-> C <-> D\n\t\t\t// A <-> C <-> B <-> D\n\n\t\t\tvar c = b.next;\n\t\t\tthis.moveUp(c.obj);\n\n\t\t\t// check to see if we are now last\n\t\t\tif (this.last == c) this.last = b;\n\t\t},\n\n\t\t/*\n\t\t\tTake everything off the list and put it in an array, sort it, then put it back.\n\t\t */\n\t\tsort: function(compare) {\n\t\t\tvar sortArray = this.sortArray;\n\t\t\tvar i, l, node = this.first;\n\t\t\tsortArray.length = 0;\n\n\t\t\twhile (node) {\n\t\t\t\tsortArray.push(node.obj);\n\t\t\t\tnode = node.next;\n\t\t\t}\n\n\t\t\tthis.clear();\n\n\t\t\tsortArray.sort(compare);\n\t\t\t// console.log(sortArray);\n\t\t\tl = sortArray.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tthis.add(sortArray[i]);\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t\tRemoves an item from the list\n\t\t\t@param obj The object to remove\n\t\t\t@returns boolean true if the item was removed, false if the item was not on the list\n\t\t */\n\t\tremove: function(obj) {\n\t\t\tvar node = this.getNode(obj);\n\t\t\tif (!node || node.free){\n\t\t\t\treturn false; // ignore this error (trying to remove something not there)\n\t\t\t}\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) node.prev.next = node.next;\n\t\t\tif (node.next) node.next.prev = node.prev;\n\n\t\t\t// fix first and last\n\t\t\tif (!node.prev) // if this was first on the list\n\t\t\t\tthis.first = node.next; // make the next on the list first (can be null)\n\t\t\tif (!node.next) // if this was the last\n\t\t\t\tthis.last = node.prev; // then this node's previous becomes last\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\n\t\t\treturn true;\n\t\t},\n\n\t\t// remove the head and return it's object\n\t\tshift: function() {\n\t\t\tvar node = this.first;\n\t\t\tif (this.length === 0) return null;\n\t\t\t// if (node == null || node.free == true) return null;\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) {\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t}\n\t\t\tif (node.next) {\n\t\t\t\tnode.next.prev = node.prev;\n\t\t\t}\n\n\t\t\t// make the next on the list first (can be null)\n\t\t\tthis.first = node.next;\n\t\t\tif (!node.next) this.last = null; // make sure we clear this\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\t\t\treturn node.obj;\n\t\t},\n\n\t\t// remove the tail and return it's object\n\t\tpop: function() {\n\t\t\tvar node = this.last;\n\t\t\tif (this.length === 0) return null;\n\n\t\t\t// pull this object out and tie up the ends\n\t\t\tif (node.prev) {\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t}\n\t\t\tif (node.next) {\n\t\t\t\tnode.next.prev = node.prev;\n\t\t\t}\n\n\t\t\t// this node's previous becomes last\n\t\t\tthis.last = node.prev;\n\t\t\tif (!node.prev) this.first = null; // make sure we clear this\n\n\t\t\tnode.free = true;\n\t\t\tnode.prev = null;\n\t\t\tnode.next = null;\n\n\t\t\tthis.length--;\n\t\t\treturn node.obj;\n\t\t},\n\n\t\t/**\n\t\t * Add the passed list to this list, leaving it untouched.\n\t\t */\n\t\tconcat: function(list) {\n\t\t\tvar node = list.first;\n\t\t\twhile (node) {\n\t\t\t\tthis.add(node.obj);\n\t\t\t\tnode = node.next;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clears the list out\n\t\t */\n\t\tclear: function() {\n\t\t\tvar next = this.first;\n\n\t\t\twhile (next) {\n\t\t\t\tnext.free = true;\n\t\t\t\tnext = next.next;\n\t\t\t}\n\n\t\t\tthis.first = null;\n\t\t\tthis.length = 0;\n\t\t},\n\n\t\tdispose: function() {\n\t\t\tvar next = this.first;\n\n\t\t\twhile (next) {\n\t\t\t\tnext.obj = null;\n\t\t\t\tnext = next.next;\n\t\t\t}\n\t\t\tthis.first = null;\n\n\t\t\tthis.objToNodeMap = null;\n\t\t},\n\n\t\t/*\n\t\t\tOutputs the contents of the current list for debugging.\n\t\t */\n\t\tdump: function(msg) {\n\t\t\tconsole.log('====================' + msg + '=====================');\n\t\t\tvar a = this.first;\n\t\t\twhile (a) {\n\t\t\t\tconsole.log(\"{\" + a.obj.toString() + \"} previous=\" + (a.prev ? a.prev.obj : \"NULL\"));\n\t\t\t\ta = a.next();\n\t\t\t}\n\t\t\tconsole.log(\"===================================\");\n\t\t\tconsole.log(\"Last: {\" + (this.last ? this.last.obj : 'NULL') + \"} \" +\n\t\t\t\t\"First: {\" + (this.first ? this.first.obj : 'NULL') + \"}\");\n\t\t}\n\t};\n\n\tLinkedList.prototype.constructor = LinkedList;\n\n\tvg.LinkedList = LinkedList;\n}());","(function() {\n    var SignalBinding = function (signal, listener, isOnce, listenerContext, priority) {\n        /**\n        * @property _listener - Handler function bound to the signal.\n        * @private\n        */\n        this._listener = listener;\n\n        /**\n        * @property {boolean} isOnce - If binding should be executed just once.\n        * @private\n        */\n        this.isOnce = isOnce;\n\n        /**\n        * @property {object|undefined|null} context - Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n        */\n        this.context = listenerContext;\n\n        /**\n        * @property {Signal} signal - Reference to Signal object that listener is currently bound to.\n        * @private\n        */\n        this.signal = signal;\n\n        /**\n        * @property {number} _priority - Listener priority.\n        * @private\n        */\n        this._priority = priority || 0;\n    };\n\n    SignalBinding.prototype = {\n        /**\n        * If binding is active and should be executed.\n        * @property {boolean} active\n        * @default\n        */\n        active: true,\n\n        /**\n        * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute` (curried parameters).\n        * @property {array|null} params\n        * @default\n        */\n        params: null,\n\n        /**\n        * Call listener passing arbitrary parameters.\n        * If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.\n        * @method SignalBinding#execute\n        * @param {array} [paramsArr] - Array of parameters that should be passed to the listener.\n        * @return {any} Value returned by the listener.\n        */\n        execute: function(paramsArr) {\n\n            var handlerReturn, params;\n\n            if (this.active && !!this._listener) {\n                params = this.params ? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n\n                if (this.isOnce) {\n                    this.detach();\n                }\n            }\n\n            return handlerReturn;\n\n        },\n\n        /**\n        * Detach binding from signal.\n        * alias to: @see mySignal.remove(myBinding.listener);\n        * @method SignalBinding#detach\n        * @return {function|null} Handler function bound to the signal or `null` if binding was previously detached.\n        */\n        detach: function () {\n            return this.isBound() ? this.signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n        * @method SignalBinding#isBound\n        * @return {boolean} True if binding is still bound to the signal and has a listener.\n        */\n        isBound: function () {\n            return (!!this.signal && !!this._listener);\n        },\n\n        /**\n        * Delete instance properties\n        * @method SignalBinding#_destroy\n        * @private\n        */\n        _destroy: function () {\n            delete this.signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n        * @method SignalBinding#toString\n        * @return {string} String representation of the object.\n        */\n        toString: function () {\n            return '[SignalBinding isOnce:' + this.isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n    };\n\n    SignalBinding.prototype.constructor = SignalBinding;\n\n\n\n    /**\n    * @author       Miller Medeiros http://millermedeiros.github.com/js-signals/\n    * @author       Richard Davey <rich@photonstorm.com>\n    * @copyright    2014 Photon Storm Ltd.\n    * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n    */\n\n    /**\n    * A Signal is used for object communication via a custom broadcaster instead of Events.\n    *\n    * @class Signal\n    * @constructor\n    */\n    var Signal = function () {\n        /**\n        * @property {Array.<SignalBinding>} _bindings - Internal variable.\n        * @private\n        */\n        this._bindings = [];\n\n        /**\n        * @property {any} _prevParams - Internal variable.\n        * @private\n        */\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n\n        /**\n        * @property {function} dispatch - The dispatch function is what sends the Signal out.\n        */\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n\n    };\n\n    Signal.prototype = {\n        /**\n        * If Signal should keep record of previously dispatched parameters and\n        * automatically execute listener during `add()`/`addOnce()` if Signal was\n        * already dispatched before.\n        * @property {boolean} memorize\n        */\n        memorize: false,\n\n        /**\n        * @property {boolean} _shouldPropagate\n        * @private\n        */\n        _shouldPropagate: true,\n\n        /**\n        * If Signal is active and should broadcast events.\n        * IMPORTANT: Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.\n        * @property {boolean} active\n        * @default\n        */\n        active: true,\n\n        /**\n        * @method Signal#validateListener\n        * @param {function} listener - Signal handler function.\n        * @param {string} fnName - Function name.\n        * @private\n        */\n        validateListener: function (listener, fnName) {\n            if (typeof listener !== 'function') {\n                throw new Error('Signal: listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName));\n            }\n        },\n\n        /**\n        * @method Signal#_registerListener\n        * @private\n        * @param {function} listener - Signal handler function.\n        * @param {boolean} isOnce - Should the listener only be called once?\n        * @param {object} [listenerContext] - The context under which the listener is invoked.\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0).\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        _registerListener: function (listener, isOnce, listenerContext, priority) {\n            var prevIndex = this._indexOfListener(listener, listenerContext);\n            var binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n\n                if (binding.isOnce !== isOnce) {\n                    throw new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once') + '() the same listener without removing the relationship first.');\n                }\n            }\n            else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if (this.memorize && this._prevParams) {\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n        * @method Signal#_addBinding\n        * @private\n        * @param {SignalBinding} binding - An Object representing the binding between the Signal and listener.\n        */\n        _addBinding: function (binding) {\n            //  Simplified insertion sort\n            var n = this._bindings.length;\n\n            do {\n                n--;\n            }\n            while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n        * @method Signal#_indexOfListener\n        * @private\n        * @param {function} listener - Signal handler function.\n        * @return {number} The index of the listener within the private bindings array.\n        */\n        _indexOfListener: function (listener, context) {\n            var n = this._bindings.length;\n            var cur;\n\n            while (n--) {\n                cur = this._bindings[n];\n\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n\n            return -1;\n        },\n\n        /**\n        * Check if listener was attached to Signal.\n        *\n        * @method Signal#has\n        * @param {function} listener - Signal handler function.\n        * @param {object} [context] - Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n        * @return {boolean} If Signal has the specified listener.\n        */\n        has: function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n        * Add a listener to the signal.\n        *\n        * @method Signal#add\n        * @param {function} listener - The function to call when this Signal is dispatched.\n        * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        add: function (listener, listenerContext, priority) {\n            this.validateListener(listener, 'add');\n\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n        * Add listener to the signal that should be removed after first execution (will be executed only once).\n        *\n        * @method Signal#addOnce\n        * @param {function} listener - The function to call when this Signal is dispatched.\n        * @param {object} [listenerContext] - The context under which the listener will be executed (i.e. the object that should represent the `this` variable).\n        * @param {number} [priority] - The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added (default = 0)\n        * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n        */\n        addOnce: function (listener, listenerContext, priority) {\n            this.validateListener(listener, 'addOnce');\n\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n        * Remove a single listener from the dispatch queue.\n        *\n        * @method Signal#remove\n        * @param {function} listener - Handler function that should be removed.\n        * @param {object} [context] - Execution context (since you can add the same handler multiple times if executing in a different context).\n        * @return {function} Listener handler function.\n        */\n        remove: function (listener, context) {\n            this.validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n\n            return listener;\n        },\n\n        /**\n        * Remove all listeners from the Signal.\n        *\n        * @method Signal#removeAll\n        * @param {object} [context=null] - If specified only listeners for the given context will be removed.\n        */\n        removeAll: function (context) {\n            if (typeof context === 'undefined') { context = null; }\n\n            var n = this._bindings.length;\n\n            while (n--) {\n                if (context) {\n                    if (this._bindings[n].context === context) {\n                        this._bindings[n]._destroy();\n                        this._bindings.splice(n, 1);\n                    }\n                }\n                else {\n                    this._bindings[n]._destroy();\n                }\n            }\n\n            if (!context) {\n                this._bindings.length = 0;\n            }\n        },\n\n        /**\n        * Gets the total number of listeneres attached to ths Signal.\n        *\n        * @method Signal#getNumListeners\n        * @return {number} Number of listeners attached to the Signal.\n        */\n        getNumListeners: function () {\n            return this._bindings.length;\n        },\n\n        /**\n        * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n        * IMPORTANT: should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.\n        * @see Signal.prototype.disable\n        *\n        * @method Signal#halt\n        */\n        halt: function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n        * Dispatch/Broadcast Signal to all listeners added to the queue.\n        *\n        * @method Signal#dispatch\n        * @param {any} [params] - Parameters that should be passed to each handler.\n        */\n        dispatch: function () {\n            if (!this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments);\n            var n = this._bindings.length;\n            var bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (!n) {\n                //  Should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do {\n                n--;\n            }\n            while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n        * Forget memorized arguments.\n        * @see Signal.memorize\n        *\n        * @method Signal#forget\n        */\n        forget: function() {\n            this._prevParams = null;\n        },\n\n        /**\n        * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n        * IMPORTANT: calling any method on the signal instance after calling dispose will throw errors.\n        *\n        * @method Signal#dispose\n        */\n        dispose: function () {\n            this.removeAll();\n\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n        *\n        * @method Signal#toString\n        * @return {string} String representation of the object.\n        */\n        toString: function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n    Signal.prototype.constructor = Signal;\n\n    vg.Signal = Signal;\n}());\n","/*\n\tA* path-finder based upon http://www.redblobgames.com/pathfinding/a-star/introduction.html\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\n// 'utils/Tools', 'lib/LinkedList'\nvg.AStarFinder = function(finderConfig) {\n\tfinderConfig = finderConfig || {};\n\n\tvar settings = {\n\t\tallowDiagonal: false,\n\t\theuristicFilter: null\n\t};\n\tsettings = vg.Tools.merge(settings, finderConfig);\n\n\tthis.allowDiagonal = settings.allowDiagonal;\n\tthis.heuristicFilter = settings.heuristicFilter;\n\n\tthis.list = new vg.LinkedList();\n};\n\nvg.AStarFinder.prototype = {\n\t/*\n\t\tFind and return the path.\n\t\t@return Array<Cell> The path, including both start and end positions. Null if it failed.\n\t */\n\tfindPath: function(startNode, endNode, heuristic, grid) {\n\t\tvar current, costSoFar, neighbors, n, i, l;\n\t\theuristic = heuristic || this.heuristicFilter;\n\t\t// clear old values from previous finding\n\t\tgrid.clearPath();\n\t\tthis.list.clear();\n\n\t\t// push the start current into the open list\n\t\tthis.list.add(startNode);\n\n\t\t// while the open list is not empty\n\t\twhile (this.list.length > 0) {\n\t\t\t// sort so lowest cost is first\n\t\t\tthis.list.sort(this.compare);\n\n\t\t\t// pop the position of current which has the minimum `_calcCost` value.\n\t\t\tcurrent = this.list.shift();\n\t\t\tcurrent._visited = true;\n\n\t\t\t// if reached the end position, construct the path and return it\n\t\t\tif (current === endNode) {\n\t\t\t\treturn vg.PathUtil.backtrace(endNode);\n\t\t\t}\n\n\t\t\t// cycle through each neighbor of the current current\n\t\t\tneighbors = grid.getNeighbors(current, this.allowDiagonal, heuristic);\n\t\t\tfor (i = 0, l = neighbors.length; i < l; i++) {\n\t\t\t\tn = neighbors[i];\n\n\t\t\t\tif (!n.walkable) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tcostSoFar = current._calcCost + grid.distance(current, n);\n\n\t\t\t\t// check if the neighbor has not been inspected yet, or can be reached with smaller cost from the current node\n\t\t\t\tif (!n._visited || costSoFar < n._calcCost) {\n\t\t\t\t\tn._visited = true;\n\t\t\t\t\tn._parent = current;\n\t\t\t\t\tn._calcCost = costSoFar;\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\t// _priority is the most important property, since it makes the algorithm \"greedy\" and seek the goal.\n\t\t\t\t\t// otherwise it behaves like a brushfire/breadth-first\n\t\t\t\t\tn._priority = costSoFar + grid.distance(endNode, n);\n\n\t\t\t\t\t// check neighbor if it's the end current as well--often cuts steps by a significant amount\n\t\t\t\t\tif (n === endNode) {\n\t\t\t\t\t\treturn vg.PathUtil.backtrace(endNode);\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(n);\n\t\t\t\t\tthis.list.add(n);\n\t\t\t\t}\n\t\t\t\t// console.log(this.list);\n\t\t\t} // end for each neighbor\n\t\t} // end while not open list empty\n\t\t// failed to find the path\n\t\treturn null;\n\t},\n\n\tcompare: function(nodeA, nodeB) {\n\t\treturn nodeA._priority - nodeB._priority;\n\t}\n};\n\nvg.AStarFinder.prototype.constructor = vg.AStarFinder;","/*\n\t@source https://github.com/qiao/PathFinding.js/\n*/\nvg.PathUtil = {\n\t/**\n\t * Backtrace according to the parent records and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node} node End node\n\t * @return {Array.<Array.<number>>} the path\n\t */\n\tbacktrace: function(node) {\n\t\tvar path = [node];\n\t\twhile (node._parent) {\n\t\t\tnode = node._parent;\n\t\t\tpath.push(node);\n\t\t}\n\t\treturn path.reverse();\n\t},\n\n\t/**\n\t * Backtrace from start and end node, and return the path.\n\t * (including both start and end nodes)\n\t * @param {Node}\n\t * @param {Node}\n\t */\n\tbiBacktrace: function(nodeA, nodeB) {\n\t\tvar pathA = this.backtrace(nodeA),\n\t\t\tpathB = this.backtrace(nodeB);\n\t\treturn pathA.concat(pathB.reverse());\n\t},\n\n\t/**\n\t * Compute the length of the path.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {number} The length of the path\n\t */\n\tpathLength: function(path) {\n\t\tvar i, sum = 0, a, b, dx, dy;\n\t\tfor (i = 1; i < path.length; ++i) {\n\t\t\ta = path[i - 1];\n\t\t\tb = path[i];\n\t\t\tdx = a[0] - b[0];\n\t\t\tdy = a[1] - b[1];\n\t\t\tsum += Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t\treturn sum;\n\t},\n\n\n\t/**\n\t * Given the start and end coordinates, return all the coordinates lying\n\t * on the line formed by these coordinates, based on Bresenham's algorithm.\n\t * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\n\t * @param {number} x0 Start x coordinate\n\t * @param {number} y0 Start y coordinate\n\t * @param {number} x1 End x coordinate\n\t * @param {number} y1 End y coordinate\n\t * @return {Array.<Array.<number>>} The coordinates on the line\n\t */\n\tinterpolate: function(x0, y0, x1, y1) {\n\t\tvar abs = Math.abs,\n\t\t\tline = [],\n\t\t\tsx, sy, dx, dy, err, e2;\n\n\t\tdx = abs(x1 - x0);\n\t\tdy = abs(y1 - y0);\n\n\t\tsx = (x0 < x1) ? 1 : -1;\n\t\tsy = (y0 < y1) ? 1 : -1;\n\n\t\terr = dx - dy;\n\n\t\twhile (x0 !== x1 || y0 !== y1) {\n\t\t\tline.push([x0, y0]);\n\n\t\t\te2 = 2 * err;\n\t\t\tif (e2 > -dy) {\n\t\t\t\terr = err - dy;\n\t\t\t\tx0 = x0 + sx;\n\t\t\t}\n\t\t\tif (e2 < dx) {\n\t\t\t\terr = err + dx;\n\t\t\t\ty0 = y0 + sy;\n\t\t\t}\n\t\t}\n\n\t\treturn line;\n\t},\n\n\n\t/**\n\t * Given a compressed path, return a new path that has all the segments\n\t * in it interpolated.\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} expanded path\n\t */\n\texpandPath: function(path) {\n\t\tvar expanded = [],\n\t\t\tlen = path.length,\n\t\t\tcoord0, coord1,\n\t\t\tinterpolated,\n\t\t\tinterpolatedLen,\n\t\t\ti, j;\n\n\t\tif (len < 2) {\n\t\t\treturn expanded;\n\t\t}\n\n\t\tfor (i = 0; i < len - 1; ++i) {\n\t\t\tcoord0 = path[i];\n\t\t\tcoord1 = path[i + 1];\n\n\t\t\tinterpolated = this.interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\n\t\t\tinterpolatedLen = interpolated.length;\n\t\t\tfor (j = 0; j < interpolatedLen - 1; ++j) {\n\t\t\t\texpanded.push(interpolated[j]);\n\t\t\t}\n\t\t}\n\t\texpanded.push(path[len - 1]);\n\n\t\treturn expanded;\n\t},\n\n\n\t/**\n\t * Smoothen the give path.\n\t * The original path will not be modified; a new path will be returned.\n\t * @param {PF.Grid} grid\n\t * @param {Array.<Array.<number>>} path The path\n\t */\n\tsmoothenPath: function(grid, path) {\n\t\tvar len = path.length,\n\t\t\tx0 = path[0][0],        // path start x\n\t\t\ty0 = path[0][1],        // path start y\n\t\t\tx1 = path[len - 1][0],  // path end x\n\t\t\ty1 = path[len - 1][1],  // path end y\n\t\t\tsx, sy,                 // current start coordinate\n\t\t\tex, ey,                 // current end coordinate\n\t\t\tnewPath,\n\t\t\tlastValidCoord,\n\t\t\ti, j, coord, line, testCoord, blocked;\n\n\t\tsx = x0;\n\t\tsy = y0;\n\t\tnewPath = [[sx, sy]];\n\n\t\tfor (i = 2; i < len; ++i) {\n\t\t\tcoord = path[i];\n\t\t\tex = coord[0];\n\t\t\tey = coord[1];\n\t\t\tline = this.interpolate(sx, sy, ex, ey);\n\n\t\t\tblocked = false;\n\t\t\tfor (j = 1; j < line.length; ++j) {\n\t\t\t\ttestCoord = line[j];\n\n\t\t\t\tif (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (blocked) {\n\t\t\t\tlastValidCoord = path[i - 1];\n\t\t\t\tnewPath.push(lastValidCoord);\n\t\t\t\tsx = lastValidCoord[0];\n\t\t\t\tsy = lastValidCoord[1];\n\t\t\t}\n\t\t}\n\t\tnewPath.push([x1, y1]);\n\n\t\treturn newPath;\n\t},\n\n\n\t/**\n\t * Compress a path, remove redundant nodes without altering the shape\n\t * The original path is not modified\n\t * @param {Array.<Array.<number>>} path The path\n\t * @return {Array.<Array.<number>>} The compressed path\n\t */\n\tcompressPath: function(path) {\n\n\t\t// nothing to compress\n\t\tif (path.length < 3) {\n\t\t\treturn path;\n\t\t}\n\n\t\tvar compressed = [],\n\t\t\tsx = path[0][0], // start x\n\t\t\tsy = path[0][1], // start y\n\t\t\tpx = path[1][0], // second point x\n\t\t\tpy = path[1][1], // second point y\n\t\t\tdx = px - sx, // direction between the two points\n\t\t\tdy = py - sy, // direction between the two points\n\t\t\tlx, ly,\n\t\t\tldx, ldy,\n\t\t\tsq, i;\n\n\t\t// normalize the direction\n\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\tdx /= sq;\n\t\tdy /= sq;\n\n\t\t// start the new path\n\t\tcompressed.push([sx,sy]);\n\n\t\tfor (i = 2; i < path.length; i++) {\n\n\t\t\t// store the last point\n\t\t\tlx = px;\n\t\t\tly = py;\n\n\t\t\t// store the last direction\n\t\t\tldx = dx;\n\t\t\tldy = dy;\n\n\t\t\t// next point\n\t\t\tpx = path[i][0];\n\t\t\tpy = path[i][1];\n\n\t\t\t// next direction\n\t\t\tdx = px - lx;\n\t\t\tdy = py - ly;\n\n\t\t\t// normalize\n\t\t\tsq = Math.sqrt(dx*dx + dy*dy);\n\t\t\tdx /= sq;\n\t\t\tdy /= sq;\n\n\t\t\t// if the direction has changed, store the point\n\t\t\tif (dx !== ldx || dy !== ldy) {\n\t\t\t\tcompressed.push([lx,ly]);\n\t\t\t}\n\t\t}\n\n\t\t// store the last point\n\t\tcompressed.push([px,py]);\n\n\t\treturn compressed;\n\t}\n};\n","vg.Loader = {\n\tmanager: null,\n\timageLoader: null,\n\tcrossOrigin: false,\n\n\tinit: function(crossOrigin) {\n\t\tthis.crossOrigin = crossOrigin || false;\n\n\t\tthis.manager = new THREE.LoadingManager(function() {\n\t\t\t// called when all images are loaded, so call your state manager or something\n\t\t}, function() {\n\t\t\t// noop\n\t\t}, function() {\n\t\t\tconsole.warn('Error loading images');\n\t\t});\n\n\t\tthis.imageLoader = new THREE.ImageLoader(this.manager);\n\t\tthis.imageLoader.crossOrigin = crossOrigin;\n\t},\n\n\tloadTexture: function(url, mapping, onLoad, onError) {\n\t\tvar texture = new THREE.Texture(null, mapping);\n\t\tthis.imageLoader.load(url, function(image) { // on load\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t},\n\t\t\tnull, // on progress\n\t\t\tfunction (evt) { // on error\n\t\t\t\tif (onError) onError(evt);\n\t\t\t});\n\t\ttexture.sourceFile = url;\n\n\t\treturn texture;\n\t}\n};\n","/*\n\tTranslates mouse interactivity into 3D positions, so we can easily pick objects in the scene.\n\n\tLike everything else in ThreeJS, ray casting creates a ton of new objects each time it's used. This contributes to frequent garbage collections (causing frame hitches), so if you're limited to low-end hardware like mobile, it would be better to only update it when the user clicks, instead of every frame (so no hover effects, but on mobile those don't work anyway). You'll want to create a version that handles touch anyway.\n\n\tgroup - any Object3D (Scene, Group, Mesh, Sprite, etc) that the mouse will cast against\n\tcamera - the camera to cast from\n\t[element] - optional element to attach mouse event to\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\nvg.MouseCaster = function(group, camera, element) {\n\tthis.down = false; // left click\n\tthis.rightDown = false;\n\t// the object that was just clicked on\n\tthis.pickedObject = null;\n\t// the object currently being 'held'\n\tthis.selectedObject = null;\n\t// store the results of the last cast\n\tthis.allHits = null;\n\t// disable the caster easily to temporarily prevent user input\n\tthis.active = true;\n\n\tthis.shift = false;\n\tthis.ctrl = false;\n\tthis.wheel = 0;\n\n\t// you can track exactly where the mouse is in the 3D scene by using the z component\n\tthis.position = new THREE.Vector3();\n\tthis.screenPosition = new THREE.Vector2();\n\tthis.signal = new vg.Signal();\n\tthis.group = group;\n\n\t// behind-the-scenes stuff you shouldn't worry about\n\tthis._camera = camera;\n\tthis._raycaster = new THREE.Raycaster();\n\tthis._preventDefault = false;\n\n\telement = element || document;\n\n\telement.addEventListener('mousemove', this._onDocumentMouseMove.bind(this), false);\n\telement.addEventListener('mousedown', this._onDocumentMouseDown.bind(this), false);\n\telement.addEventListener('mouseup', this._onDocumentMouseUp.bind(this), false);\n\telement.addEventListener('mousewheel', this._onMouseWheel.bind(this), false);\n\telement.addEventListener('DOMMouseScroll', this._onMouseWheel.bind(this), false); // firefox\n};\n\n// statics to describe the events we dispatch\nvg.MouseCaster.OVER = 'over';\nvg.MouseCaster.OUT = 'out';\nvg.MouseCaster.DOWN = 'down';\nvg.MouseCaster.UP = 'up';\nvg.MouseCaster.CLICK = 'click'; // only fires if the user clicked down and up while on the same object\nvg.MouseCaster.WHEEL = 'wheel';\n\nvg.MouseCaster.prototype = {\n\tupdate: function() {\n\t\tif (!this.active) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._raycaster.setFromCamera(this.screenPosition, this._camera);\n\n\t\tvar intersects = this._raycaster.intersectObject(this.group, true);\n\t\tvar hit, obj;\n\n\t\tif (intersects.length > 0) {\n\t\t\t// get the first object under the mouse\n\t\t\thit = intersects[0];\n\t\t\tobj = hit.object.userData.structure;\n\t\t\tif (this.pickedObject != obj) {\n\t\t\t\t// the first object changed, meaning there's a different one, or none at all\n\t\t\t\tif (this.pickedObject) {\n\t\t\t\t\t// it's a new object, notify the old object is going away\n\t\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject);\n\t\t\t\t}\n\t\t\t\t/*else {\n\t\t\t\t\t// hit a new object when nothing was there previously\n\t\t\t\t}*/\n\t\t\t\tthis.pickedObject = obj;\n\t\t\t\tthis.selectedObject = null; // cancel click, otherwise it'll confuse the user\n\n\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OVER, this.pickedObject);\n\t\t\t}\n\t\t\tthis.position.copy(hit.point);\n\t\t\tthis.screenPosition.z = hit.distance;\n\t\t}\n\t\telse {\n\t\t\t// there isn't anything under the mouse\n\t\t\tif (this.pickedObject) {\n\t\t\t\t// there was though, we just moved out\n\t\t\t\tthis.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject);\n\t\t\t}\n\t\t\tthis.pickedObject = null;\n\t\t\tthis.selectedObject = null;\n\t\t}\n\n\t\tthis.allHits = intersects;\n\t},\n\n\tpreventDefault: function() {\n\t\tthis._preventDefault = true;\n\t},\n\n\t_onDocumentMouseDown: function(evt) {\n\t\tevt = evt || window.event;\n\t\tevt.preventDefault();\n\t\tif (this._preventDefault) {\n\t\t\tthis._preventDefault = false;\n\t\t\treturn false;\n\t\t}\n\t\tif (this.pickedObject) {\n\t\t\tthis.selectedObject = this.pickedObject;\n\t\t}\n\t\tthis.shift = evt.shiftKey;\n\t\tthis.ctrl = evt.ctrlKey;\n\n\t\tthis.down = evt.which === 1;\n\t\tthis.rightDown = evt.which === 3;\n\n\t\tthis.signal.dispatch(vg.MouseCaster.DOWN, this.pickedObject);\n\t},\n\n\t_onDocumentMouseUp: function(evt) {\n\t\tevt.preventDefault();\n\t\tif (this._preventDefault) {\n\t\t\tthis._preventDefault = false;\n\t\t\treturn false;\n\t\t}\n\t\tthis.shift = evt.shiftKey;\n\t\tthis.ctrl = evt.ctrlKey;\n\n\t\tthis.signal.dispatch(vg.MouseCaster.UP, this.pickedObject);\n\t\tif (this.selectedObject && this.pickedObject && this.selectedObject.uniqueID === this.pickedObject.uniqueID) {\n\t\t\tthis.signal.dispatch(vg.MouseCaster.CLICK, this.pickedObject);\n\t\t}\n\n\t\tthis.down = evt.which === 1 ? false : this.down;\n\t\tthis.rightDown = evt.which === 3 ? false : this.rightDown;\n\t},\n\n\t_onDocumentMouseMove: function(evt) {\n\t\tevt.preventDefault();\n\t\tthis.screenPosition.x = (evt.clientX / window.innerWidth) * 2 - 1;\n\t\tthis.screenPosition.y = -(evt.clientY / window.innerHeight) * 2 + 1;\n\t},\n\n\t_onMouseWheel: function(evt) {\n\t\tif (!this.active) {\n\t\t\treturn;\n\t\t}\n\t\tevt.preventDefault();\n\t\tevt.stopPropagation();\n\n\t\tvar delta = 0;\n\t\tif (evt.wheelDelta !== undefined) { // WebKit / Opera / Explorer 9\n\t\t\tdelta = evt.wheelDelta;\n\t\t}\n\t\telse if (evt.detail !== undefined) { // Firefox\n\t\t\tdelta = -evt.detail;\n\t\t}\n\t\tif (delta > 0) {\n\t\t\tthis.wheel++;\n\t\t}\n\t\telse {\n\t\t\tthis.wheel--;\n\t\t}\n\t\t// console.log(this.wheel);\n\t\tthis.signal.dispatch(vg.MouseCaster.WHEEL, this.wheel);\n\t}\n};\n\nvg.MouseCaster.prototype.constructor = vg.MouseCaster;\n","/*\n\tSets up and manages a THREEjs container, camera, and light, making it easy to get going.\n\tAlso provides camera control.\n\n\tAssumes full screen.\n */\n// 'utils/Tools'\nvg.Scene = function(sceneConfig, controlConfig) {\n\tvar sceneSettings = {\n\t\telement: document.body,\n\t\talpha: true,\n\t\tantialias: true,\n\t\tclearColor: '#fff',\n\t\tsortObjects: false,\n\t\tfog: null,\n\t\tlight: new THREE.DirectionalLight(0xffffff),\n\t\tlightPosition: null,\n\t\tcameraType: 'PerspectiveCamera',\n\t\tcameraPosition: null, // {x, y, z}\n\t\torthoZoom: 4\n\t};\n\n\tvar controlSettings = {\n\t\tminDistance: 100,\n\t\tmaxDistance: 1000,\n\t\tzoomSpeed: 2,\n\t\tnoZoom: false\n\t};\n\n\tsceneSettings = vg.Tools.merge(sceneSettings, sceneConfig);\n\tif (typeof controlConfig !== 'boolean') {\n\t\tcontrolSettings = vg.Tools.merge(controlSettings, controlConfig);\n\t}\n\n\tthis.renderer = new THREE.WebGLRenderer({\n\t\talpha: sceneSettings.alpha,\n\t\tantialias: sceneSettings.antialias\n\t});\n\tthis.renderer.setClearColor(sceneSettings.clearColor, 0);\n\tthis.renderer.sortObjects = sceneSettings.sortObjects;\n\n\tthis.width = window.innerWidth;\n\tthis.height = window.innerHeight;\n\n\tthis.orthoZoom = sceneSettings.orthoZoom;\n\n\tthis.container = new THREE.Scene();\n\tthis.container.fog = sceneSettings.fog;\n\n\tthis.container.add(new THREE.AmbientLight(0xdddddd));\n\n\tif (!sceneSettings.lightPosition) {\n\t\tsceneSettings.light.position.set(-1, 1, -1).normalize();\n\t}\n\tthis.container.add(sceneSettings.light);\n\n\tif (sceneSettings.cameraType === 'OrthographicCamera') {\n\t\tvar width = window.innerWidth / this.orthoZoom;\n\t\tvar height = window.innerHeight / this.orthoZoom;\n\t\tthis.camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 5000);\n\t}\n\telse {\n\t\tthis.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5000);\n\t}\n\n\tthis.contolled = !!controlConfig;\n\tif (this.contolled) {\n\t\tthis.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t\tthis.controls.minDistance = controlSettings.minDistance;\n\t\tthis.controls.maxDistance = controlSettings.maxDistance;\n\t\tthis.controls.zoomSpeed = controlSettings.zoomSpeed;\n\t\tthis.controls.noZoom = controlSettings.noZoom;\n\t}\n\n\tif (sceneSettings.cameraPosition) {\n\t\tthis.camera.position.copy(sceneSettings.cameraPosition);\n\t}\n\n\twindow.addEventListener('resize', function onWindowResize() {\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\t\tif (this.camera.type === 'OrthographicCamera') {\n\t\t\tvar width = this.width / this.orthoZoom;\n\t\t\tvar height = this.height / this.orthoZoom;\n\t\t\tthis.camera.left = width / -2;\n\t\t\tthis.camera.right = width / 2;\n\t\t\tthis.camera.top = height / 2;\n\t\t\tthis.camera.bottom = height / -2;\n\t\t}\n\t\telse {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t}\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderer.setSize(this.width, this.height);\n\t}.bind(this), false);\n\n\tthis.attachTo(sceneSettings.element);\n};\n\nvg.Scene.prototype = {\n\n\tattachTo: function(element) {\n\t\telement.style.width = this.width + 'px';\n\t\telement.style.height = this.height + 'px';\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis.renderer.setSize(this.width, this.height);\n\t\telement.appendChild(this.renderer.domElement);\n\t},\n\n\tadd: function(mesh) {\n\t\tthis.container.add(mesh);\n\t},\n\n\tremove: function(mesh) {\n\t\tthis.container.remove(mesh);\n\t},\n\n\trender: function() {\n\t\tif (this.contolled) this.controls.update();\n\t\tthis.renderer.render(this.container, this.camera);\n\t},\n\n\tupdateOrthoZoom: function() {\n\t\tif (this.orthoZoom <= 0) {\n\t\t\tthis.orthoZoom = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar width = this.width / this.orthoZoom;\n\t\tvar height = this.height / this.orthoZoom;\n\t\tthis.camera.left = width / -2;\n\t\tthis.camera.right = width / 2;\n\t\tthis.camera.top = height / 2;\n\t\tthis.camera.bottom = height / -2;\n\t\tthis.camera.updateProjectionMatrix();\n\t},\n\n\tfocusOn: function(obj) {\n\t\tthis.camera.lookAt(obj.position);\n\t}\n};\n\nvg.Scene.prototype.constructor = vg.Scene;\n","// 'utils/Tools', 'lib/LinkedList', 'utils/MouseCaster', 'lib/Signal'\nvg.SelectionManager = function(mouse) {\n\tthis.mouse = mouse;\n\n\tthis.onSelect = new vg.Signal();\n\tthis.onDeselect = new vg.Signal();\n\n\tthis.selected = null;\n\t// deselect if player clicked on the same thing twice\n\tthis.toggleSelection = false;\n\n\t// allow multiple entities to be selected at once\n\t// this.multiselect = false; // todo\n\t// this.allSelected = new LinkedList();\n\n\tthis.mouse.signal.add(this.onMouse, this);\n}\n\nvg.SelectionManager.prototype = {\n\tselect: function(obj, fireSignal) {\n\t\tif (!obj) return;\n\t\tfireSignal = fireSignal || true;\n\n\t\tif (this.selected !== obj) {\n\t\t\t// deselect previous object\n\t\t\tthis.clearSelection(fireSignal);\n\t\t}\n\t\tif (obj.selected) {\n\t\t\tif (this.toggleSelection) {\n\t\t\t\tif (fireSignal) {\n\t\t\t\t\tthis.onDeselect.dispatch(obj);\n\t\t\t\t}\n\t\t\t\tobj.deselect();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobj.select();\n\t\t}\n\n\t\tthis.selected = obj;\n\t\tif (fireSignal) {\n\t\t\tthis.onSelect.dispatch(obj);\n\t\t}\n\t},\n\n\tclearSelection: function(fireSignal) {\n\t\tfireSignal = fireSignal || true;\n\t\tif (this.selected) {\n\t\t\tif (fireSignal) {\n\t\t\t\tthis.onDeselect.dispatch(this.selected);\n\t\t\t}\n\t\t\tthis.selected.deselect();\n\t\t}\n\t\tthis.selected = null;\n\t},\n\n\tonMouse: function(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\tif (!obj) {\n\t\t\t\t\tthis.clearSelection();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\tthis.select(obj);\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\nvg.SelectionManager.prototype.constructor = vg.SelectionManager;\n","vg.Tools = {\n\tclamp: function(val, min, max) {\n\t\treturn Math.max(min, Math.min(max, val));\n\t},\n\n\tsign: function(val) {\n\t\treturn val && val / Math.abs(val);\n\t},\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n\trandom: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5);\n\t\t}\n\t\treturn Math.random() * (max - min) + min;\n\t},\n\n\t// from min to (and including) max\n\trandomInt: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5) | 0;\n\t\t}\n\t\treturn (Math.random() * (max - min + 1) + min) | 0;\n\t},\n\n\tnormalize: function(v, min, max) {\n\t\treturn (v - min) / (max - min);\n\t},\n\n\tgetShortRotation: function(angle) {\n\t\tangle %= this.TAU;\n\t\tif (angle > this.PI) {\n\t\t\tangle -= this.TAU;\n\t\t}\n\t\telse if (angle < -this.PI) {\n\t\t\tangle += this.TAU;\n\t\t}\n\t\treturn angle;\n\t},\n\n\tgenerateID: function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t},\n\n\tisPlainObject: function(obj) {\n\t\tif (typeof(obj) !== 'object' || obj.nodeType || obj === obj.window) {\n\t\t\treturn false;\n\t\t}\n\t\t// The try/catch suppresses exceptions thrown when attempting to access the 'constructor' property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\t// https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n\tmerge: function(target, src) {\n\t\tvar self = this, array = Array.isArray(src);\n\t\tvar dst = array && [] || {};\n\t\tif (array) {\n\t\t\ttarget = target || [];\n\t\t\tdst = dst.concat(target);\n\t\t\tsrc.forEach(function(e, i) {\n\t\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\t\tdst[i] = e;\n\t\t\t\t}\n\t\t\t\telse if (self.isPlainObject(e)) {\n\t\t\t\t\tdst[i] = self.merge(target[i], e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\t\tdst.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dst;\n\t\t}\n\t\tif (target && self.isPlainObject(target)) {\n\t\t\tObject.keys(target).forEach(function (key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t});\n\t\t}\n\t\tObject.keys(src).forEach(function (key) {\n\t\t\tif (!src[key] || !self.isPlainObject(src[key])) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdst[key] = self.merge(target[key], src[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dst;\n\t},\n\n\tnow: function() {\n\t\treturn window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n\t},\n\n\tempty: function(node) {\n\t\twhile (node.lastChild) {\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\t},\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n\tradixSort: function(arr, idxBegin, idxEnd, bit) {\n\t\tidxBegin = idxBegin || 0;\n\t\tidxEnd = idxEnd || arr.length;\n\t\tbit = bit || 31;\n\t\tif (idxBegin >= (idxEnd - 1) || bit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = idxBegin;\n\t\tvar idxOnes = idxEnd;\n\t\tvar mask = 0x1 << bit;\n\t\twhile (idx < idxOnes) {\n\t\t\tif (arr[idx] & mask) {\n\t\t\t\t--idxOnes;\n\t\t\t\tvar tmp = arr[idx];\n\t\t\t\tarr[idx] = arr[idxOnes];\n\t\t\t\tarr[idxOnes] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++idx;\n\t\t\t}\n\t\t}\n\t\tthis.radixSort(arr, idxBegin, idxOnes, bit-1);\n\t\tthis.radixSort(arr, idxOnes, idxEnd, bit-1);\n\t},\n\n\trandomizeRGB: function(base, range) {\n\t\tvar rgb = base.split(',');\n\t\tvar color = 'rgb(';\n\t\tvar i, c;\n\t\trange = this.randomInt(range);\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tc = parseInt(rgb[i]) + range;\n\t\t\tif (c < 0) c = 0;\n\t\t\telse if (c > 255) c = 255;\n\t\t\tcolor += c + ',';\n\t\t}\n\t\tcolor = color.substring(0, color.length-1);\n\t\tcolor += ')';\n\t\treturn color;\n\t},\n\n\tgetJSON: function(config) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar cache = typeof config.cache === 'undefined' ? false : config.cache;\n\t\tvar uri = cache ? config.url : config.url + '?t=' + Math.floor(Math.random() * 10000) + Date.now();\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (this.status === 200) {\n\t\t\t\tvar json = null;\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(this.responseText);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\t// console.warn('[Tools.getJSON] Error: '+config.url+' is not a json resource');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.callback.call(config.scope || null, json);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (this.status !== 0) {\n\t\t\t\tconsole.warn('[Tools.getJSON] Error: '+this.status+' ('+this.statusText+') :: '+config.url);\n\t\t\t}\n\t\t}\n\t\txhr.open('GET', uri, true);\n\t\txhr.setRequestHeader('Accept', 'application/json');\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send('');\n\t}\n};\n"],"sourceRoot":"/source/"},"metadata":{},"sourceType":"script"}