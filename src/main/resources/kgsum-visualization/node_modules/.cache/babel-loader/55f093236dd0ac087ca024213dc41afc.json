{"ast":null,"code":"THREE.FBXLoader = require('../../lib/FBXLoader');\n/**\n * fbx-model\n *\n * Loader for FBX format. Supports ASCII, but *not* binary, models.\n */\n\nmodule.exports = AFRAME.registerComponent('fbx-model', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    crossorigin: {\n      default: ''\n    }\n  },\n  init: function () {\n    this.model = null;\n  },\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {\n      format: 'fbx',\n      model: model\n    });\n  },\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});","map":{"version":3,"sources":["E:/Universitat Paderborn/NEW/src/node_modules/aframe-extras/src/loaders/fbx-model.js"],"names":["THREE","FBXLoader","require","module","exports","AFRAME","registerComponent","schema","src","type","crossorigin","default","init","model","update","data","remove","loader","setCrossOrigin","load","bind","el","setObject3D","emit","format","removeObject3D"],"mappings":"AAAAA,KAAK,CAACC,SAAN,GAAkBC,OAAO,CAAC,qBAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,iBAAP,CAAyB,WAAzB,EAAsC;AACrDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAU;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADP;AAENC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAFP,GAD6C;AAMrDC,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,KAAL,GAAa,IAAb;AACD,GARoD;AAUrDC,EAAAA,MAAM,EAAE,YAAY;AAClB,UAAMC,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAI,CAACA,IAAI,CAACP,GAAV,EAAe;AAEf,SAAKQ,MAAL;AACA,UAAMC,MAAM,GAAG,IAAIjB,KAAK,CAACC,SAAV,EAAf;AACA,QAAIc,IAAI,CAACL,WAAT,EAAsBO,MAAM,CAACC,cAAP,CAAsBH,IAAI,CAACL,WAA3B;AACtBO,IAAAA,MAAM,CAACE,IAAP,CAAYJ,IAAI,CAACP,GAAjB,EAAsB,KAAKW,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAtB;AACD,GAlBoD;AAoBrDD,EAAAA,IAAI,EAAE,UAAUN,KAAV,EAAiB;AACrB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKQ,EAAL,CAAQC,WAAR,CAAoB,MAApB,EAA4BT,KAA5B;AACA,SAAKQ,EAAL,CAAQE,IAAR,CAAa,cAAb,EAA6B;AAACC,MAAAA,MAAM,EAAE,KAAT;AAAgBX,MAAAA,KAAK,EAAEA;AAAvB,KAA7B;AACD,GAxBoD;AA0BrDG,EAAAA,MAAM,EAAE,YAAY;AAClB,QAAI,KAAKH,KAAT,EAAgB,KAAKQ,EAAL,CAAQI,cAAR,CAAuB,MAAvB;AACjB;AA5BoD,CAAtC,CAAjB","sourcesContent":["THREE.FBXLoader = require('../../lib/FBXLoader');\n\n/**\n * fbx-model\n *\n * Loader for FBX format. Supports ASCII, but *not* binary, models.\n */\nmodule.exports = AFRAME.registerComponent('fbx-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'fbx', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n"]},"metadata":{},"sourceType":"script"}